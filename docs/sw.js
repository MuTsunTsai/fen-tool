(()=>{try{self["workbox:core:7.0.0"]&&_()}catch(e){}var e,t,a={"invalid-value":({paramName:e,validValueDescription:t,value:a})=>{if(!e||!t)throw new Error("Unexpected input to 'invalid-value' error.");return"The '".concat(e,"' parameter was given a value with an ")+"unexpected value. ".concat(t," Received a value of ")+"".concat(JSON.stringify(a),".")},"not-an-array":({moduleName:e,className:t,funcName:a,paramName:s})=>{if(!(e&&t&&a&&s))throw new Error("Unexpected input to 'not-an-array' error.");return"The parameter '".concat(s,"' passed into ")+"'".concat(e,".").concat(t,".").concat(a,"()' must be an array.")},"incorrect-type":({expectedType:e,paramName:t,moduleName:a,className:s,funcName:r})=>{if(!(e&&t&&a&&r))throw new Error("Unexpected input to 'incorrect-type' error.");const n=s?"".concat(s,"."):"";return"The parameter '".concat(t,"' passed into ")+"'".concat(a,".").concat(n)+"".concat(r,"()' must be of type ").concat(e,".")},"incorrect-class":({expectedClassName:e,paramName:t,moduleName:a,className:s,funcName:r,isReturnValueProblem:n})=>{if(!e||!a||!r)throw new Error("Unexpected input to 'incorrect-class' error.");const o=s?"".concat(s,"."):"";return n?"The return value from "+"'".concat(a,".").concat(o).concat(r,"()' ")+"must be an instance of class ".concat(e,"."):"The parameter '".concat(t,"' passed into ")+"'".concat(a,".").concat(o).concat(r,"()' ")+"must be an instance of class ".concat(e,".")},"missing-a-method":({expectedMethod:e,paramName:t,moduleName:a,className:s,funcName:r})=>{if(!(e&&t&&a&&s&&r))throw new Error("Unexpected input to 'missing-a-method' error.");return"".concat(a,".").concat(s,".").concat(r,"() expected the ")+"'".concat(t,"' parameter to expose a '").concat(e,"' method.")},"add-to-cache-list-unexpected-type":({entry:e})=>"An unexpected entry was passed to 'workbox-precaching.PrecacheController.addToCacheList()' The entry "+"'".concat(JSON.stringify(e),"' isn't supported. You must supply an array of ")+"strings with one or more characters, objects with a url property or Request objects.","add-to-cache-list-conflicting-entries":({firstEntry:e,secondEntry:t})=>{if(!e||!t)throw new Error("Unexpected input to 'add-to-cache-list-duplicate-entries' error.");return"Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL "+"".concat(e," but different revision details. Workbox is ")+"unable to cache and version the asset correctly. Please remove one of the entries."},"plugin-error-request-will-fetch":({thrownErrorMessage:e})=>{if(!e)throw new Error("Unexpected input to 'plugin-error-request-will-fetch', error.");return"An error was thrown by a plugins 'requestWillFetch()' method. "+"The thrown error message was: '".concat(e,"'.")},"invalid-cache-name":({cacheNameId:e,value:t})=>{if(!e)throw new Error("Expected a 'cacheNameId' for error 'invalid-cache-name'");return"You must provide a name containing at least one character for "+"setCacheDetails({".concat(e,": '...'}). Received a value of ")+"'".concat(JSON.stringify(t),"'")},"unregister-route-but-not-found-with-method":({method:e})=>{if(!e)throw new Error("Unexpected input to 'unregister-route-but-not-found-with-method' error.");return"The route you're trying to unregister was not  previously "+"registered for the method type '".concat(e,"'.")},"unregister-route-route-not-registered":()=>"The route you're trying to unregister was not previously registered.","queue-replay-failed":({name:e})=>"Replaying the background sync queue '".concat(e,"' failed."),"duplicate-queue-name":({name:e})=>"The Queue name '".concat(e,"' is already being used. ")+"All instances of backgroundSync.Queue must be given unique names.","expired-test-without-max-age":({methodName:e,paramName:t})=>"The '".concat(e,"()' method can only be used when the ")+"'".concat(t,"' is used in the constructor."),"unsupported-route-type":({moduleName:e,className:t,funcName:a,paramName:s})=>"The supplied '".concat(s,"' parameter was an unsupported type. ")+"Please check the docs for ".concat(e,".").concat(t,".").concat(a," for ")+"valid input types.","not-array-of-class":({value:e,expectedClass:t,moduleName:a,className:s,funcName:r,paramName:n})=>"The supplied '".concat(n,"' parameter must be an array of ")+"'".concat(t,"' objects. Received '").concat(JSON.stringify(e),",'. ")+"Please check the call to ".concat(a,".").concat(s,".").concat(r,"() ")+"to fix the issue.","max-entries-or-age-required":({moduleName:e,className:t,funcName:a})=>"You must define either config.maxEntries or config.maxAgeSeconds"+"in ".concat(e,".").concat(t,".").concat(a),"statuses-or-headers-required":({moduleName:e,className:t,funcName:a})=>"You must define either config.statuses or config.headers"+"in ".concat(e,".").concat(t,".").concat(a),"invalid-string":({moduleName:e,funcName:t,paramName:a})=>{if(!a||!e||!t)throw new Error("Unexpected input to 'invalid-string' error.");return"When using strings, the '".concat(a,"' parameter must start with ")+"'http' (for cross-origin matches) or '/' (for same-origin matches). "+"Please see the docs for ".concat(e,".").concat(t,"() for ")+"more info."},"channel-name-required":()=>"You must provide a channelName to construct a BroadcastCacheUpdate instance.","invalid-responses-are-same-args":()=>"The arguments passed into responsesAreSame() appear to be invalid. Please ensure valid Responses are used.","expire-custom-caches-only":()=>"You must provide a 'cacheName' property when using the expiration plugin with a runtime caching strategy.","unit-must-be-bytes":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'unit-must-be-bytes' error.");return"The 'unit' portion of the Range header must be set to 'bytes'. "+'The Range header provided was "'.concat(e,'"')},"single-range-only":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'single-range-only' error.");return"Multiple ranges are not supported. Please use a  single start value, and optional end value. The Range header provided was "+'"'.concat(e,'"')},"invalid-range-values":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'invalid-range-values' error.");return"The Range header is missing both start and end values. At least one of those values is needed. The Range header provided was "+'"'.concat(e,'"')},"no-range-header":()=>"No Range header was found in the Request provided.","range-not-satisfiable":({size:e,start:t,end:a})=>"The start (".concat(t,") and end (").concat(a,") values in the Range are ")+"not satisfiable by the cached response, which is ".concat(e," bytes."),"attempt-to-cache-non-get-request":({url:e,method:t})=>"Unable to cache '".concat(e,"' because it is a '").concat(t,"' request and ")+"only 'GET' requests can be cached.","cache-put-with-no-response":({url:e})=>"There was an attempt to cache '".concat(e,"' but the response was not ")+"defined.","no-response":({url:e,error:t})=>{let a="The strategy could not generate a response for '".concat(e,"'.");return t&&(a+=" The underlying error is ".concat(t,".")),a},"bad-precaching-response":({url:e,status:t})=>"The precaching request for '".concat(e,"' failed")+(t?" with an HTTP status of ".concat(t,"."):"."),"non-precached-url":({url:e})=>"createHandlerBoundToURL('".concat(e,"') was called, but that URL is ")+"not precached. Please pass in a URL that is precached instead.","add-to-cache-list-conflicting-integrities":({url:e})=>"Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL "+"".concat(e," with different integrity values. Please remove one of them."),"missing-precache-entry":({cacheName:e,url:t})=>"Unable to find a precached response in ".concat(e," for ").concat(t,"."),"cross-origin-copy-response":({origin:e})=>"workbox-core.copyResponse() can only be used with same-origin "+"responses. It was passed a response with origin ".concat(e,"."),"opaque-streams-source":({type:e})=>{const t="One of the workbox-streams sources resulted in an "+"'".concat(e,"' response.");return"opaqueredirect"===e?"".concat(t," Please do not use a navigation request that results ")+"in a redirect as a source.":"".concat(t," Please ensure your sources are CORS-enabled.")}},s=(e,t={})=>{const s=a[e];if(!s)throw new Error("Unable to find message for code '".concat(e,"'."));return s(t)},r=class extends Error{constructor(e,t){super(s(e,t)),this.name=e,this.details=t}},n=(()=>{"__WB_DISABLE_DEV_LOGS"in globalThis||(self.__WB_DISABLE_DEV_LOGS=!1);let e=!1;const t={debug:"#7f8c8d",log:"#2ecc71",warn:"#f39c12",error:"#c0392b",groupCollapsed:"#3498db",groupEnd:null},a=function(a,s){if(self.__WB_DISABLE_DEV_LOGS)return;if("groupCollapsed"===a&&/^((?!chrome|android).)*safari/i.test(navigator.userAgent))return void console[a](...s);const r=["background: ".concat(t[a]),"border-radius: 0.5em","color: white","font-weight: bold","padding: 2px 0.5em"],n=e?[]:["%cworkbox",r.join(";")];console[a](...n,...s),"groupCollapsed"===a&&(e=!0),"groupEnd"===a&&(e=!1)},s={},r=Object.keys(t);for(const e of r){const t=e;s[t]=(...e)=>{a(t,e)}}return s})(),o={hasMethod:(e,t,a)=>{if("function"!==typeof e[t])throw a.expectedMethod=t,new r("missing-a-method",a)},isArray:(e,t)=>{if(!Array.isArray(e))throw new r("not-an-array",t)},isInstance:(e,t,a)=>{if(!(e instanceof t))throw a.expectedClassName=t.name,new r("incorrect-class",a)},isOneOf:(e,t,a)=>{if(!t.includes(e))throw a.validValueDescription="Valid values are ".concat(JSON.stringify(t),"."),new r("invalid-value",a)},isType:(e,t,a)=>{if(typeof e!==t)throw a.expectedType=t,new r("incorrect-type",a)},isArrayOfClass:(e,t,a)=>{const s=new r("not-array-of-class",a);if(!Array.isArray(e))throw s;for(const a of e)if(!(a instanceof t))throw s}},c=e=>new URL(String(e),location.href).href.replace(new RegExp("^".concat(location.origin)),""),i=(e,t)=>t.some((t=>e instanceof t));var u=new WeakMap,l=new WeakMap,h=new WeakMap,d=new WeakMap,p=new WeakMap;var f={get(e,t,a){if(e instanceof IDBTransaction){if("done"===t)return l.get(e);if("objectStoreNames"===t)return e.objectStoreNames||h.get(e);if("store"===t)return a.objectStoreNames[1]?void 0:a.objectStore(a.objectStoreNames[0])}return y(e[t])},set:(e,t,a)=>(e[t]=a,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function m(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(t||(t=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(b(this),t),y(u.get(this))}:function(...t){return y(e.apply(b(this),t))}:function(t,...a){const s=e.call(b(this),t,...a);return h.set(s,t.sort?t.sort():[t]),y(s)}}function g(t){return"function"==typeof t?m(t):(t instanceof IDBTransaction&&function(e){if(l.has(e))return;const t=new Promise(((t,a)=>{const s=()=>{e.removeEventListener("complete",r),e.removeEventListener("error",n),e.removeEventListener("abort",n)},r=()=>{t(),s()},n=()=>{a(e.error||new DOMException("AbortError","AbortError")),s()};e.addEventListener("complete",r),e.addEventListener("error",n),e.addEventListener("abort",n)}));l.set(e,t)}(t),i(t,e||(e=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(t,f):t)}function y(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,a)=>{const s=()=>{e.removeEventListener("success",r),e.removeEventListener("error",n)},r=()=>{t(y(e.result)),s()},n=()=>{a(e.error),s()};e.addEventListener("success",r),e.addEventListener("error",n)}));return t.then((t=>{t instanceof IDBCursor&&u.set(t,e)})).catch((()=>{})),p.set(t,e),t}(e);if(d.has(e))return d.get(e);const t=g(e);return t!==e&&(d.set(e,t),p.set(t,e)),t}var b=e=>p.get(e);var w=["get","getKey","getAll","getAllKeys","count"],v=["put","add","delete","clear"],N=new Map;function q(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(N.get(t))return N.get(t);const a=t.replace(/FromIndex$/,""),s=t!==a,r=v.includes(a);if(!(a in(s?IDBIndex:IDBObjectStore).prototype)||!r&&!w.includes(a))return;const n=async function(e,...t){const n=this.transaction(e,r?"readwrite":"readonly");let o=n.store;return s&&(o=o.index(t.shift())),(await Promise.all([o[a](...t),r&&n.done]))[0]};return N.set(t,n),n}f=(e=>({...e,get:(t,a,s)=>q(t,a)||e.get(t,a,s),has:(t,a)=>!!q(t,a)||e.has(t,a)}))(f);try{self["workbox:background-sync:7.0.0"]&&_()}catch(e){}var x="requests",R="queueName",k=["method","referrer","referrerPolicy","mode","credentials","cache","redirect","integrity","keepalive"],E=class e{static async fromRequest(t){const a={url:t.url,headers:{}};"GET"!==t.method&&(a.body=await t.clone().arrayBuffer());for(const[e,s]of t.headers.entries())a.headers[e]=s;for(const e of k)void 0!==t[e]&&(a[e]=t[e]);return new e(a)}constructor(e){o.isType(e,"object",{moduleName:"workbox-background-sync",className:"StorableRequest",funcName:"constructor",paramName:"requestData"}),o.isType(e.url,"string",{moduleName:"workbox-background-sync",className:"StorableRequest",funcName:"constructor",paramName:"requestData.url"}),"navigate"===e.mode&&(e.mode="same-origin"),this._requestData=e}toObject(){const e=Object.assign({},this._requestData);return e.headers=Object.assign({},this._requestData.headers),e.body&&(e.body=e.body.slice(0)),e}toRequest(){return new Request(this._requestData.url,this._requestData)}clone(){return new e(this.toObject())}},T="workbox-background-sync",C=new Set,S=e=>{const t={request:new E(e.requestData).toRequest(),timestamp:e.timestamp};return e.metadata&&(t.metadata=e.metadata),t},L={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},U=e=>[L.prefix,e,L.suffix].filter((e=>e&&e.length>0)).join("-"),D=e=>e||U(L.googleAnalytics),P=e=>e||U(L.precache),I=e=>e||U(L.runtime);try{self["workbox:routing:7.0.0"]&&_()}catch(e){}var O=["DELETE","GET","HEAD","PATCH","POST","PUT"],A=e=>e&&"object"==typeof e?(o.hasMethod(e,"handle",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),e):(o.isType(e,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),{handle:e}),j=class{constructor(e,t,a="GET"){o.isType(e,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"match"}),a&&o.isOneOf(a,O,{paramName:"method"}),this.handler=A(t),this.match=e,this.method=a}setCatchHandler(e){this.catchHandler=A(e)}},B=class{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,a=this.handleRequest({request:t,event:e});a&&e.respondWith(a)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data;n.debug("Caching URLs from the window",t.urlsToCache);const a=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const a=new Request(...t);return this.handleRequest({request:a,event:e})})));e.waitUntil(a),e.ports&&e.ports[0]&&a.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){o.isInstance(e,Request,{moduleName:"workbox-routing",className:"Router",funcName:"handleRequest",paramName:"options.request"});const a=new URL(e.url,location.href);if(!a.protocol.startsWith("http"))return void n.debug("Workbox Router only supports URLs that start with 'http'.");const s=a.origin===location.origin,{params:r,route:i}=this.findMatchingRoute({event:t,request:e,sameOrigin:s,url:a});let u=i&&i.handler;const l=[];u&&(l.push(["Found a route to handle this request:",i]),r&&l.push(["Passing the following params to the route's handler:",r]));const h=e.method;if(!u&&this._defaultHandlerMap.has(h)&&(l.push("Failed to find a matching route. Falling "+"back to the default handler for ".concat(h,".")),u=this._defaultHandlerMap.get(h)),!u)return void n.debug("No route found for: ".concat(c(a)));let d;n.groupCollapsed("Router is responding to: ".concat(c(a))),l.forEach((e=>{Array.isArray(e)?n.log(...e):n.log(e)})),n.groupEnd();try{d=u.handle({url:a,request:e,event:t,params:r})}catch(e){d=Promise.reject(e)}const p=i&&i.catchHandler;return d instanceof Promise&&(this._catchHandler||p)&&(d=d.catch((async s=>{if(p){n.groupCollapsed("Error thrown when responding to: "+" ".concat(c(a),". Falling back to route's Catch Handler.")),n.error("Error thrown by:",i),n.error(s),n.groupEnd();try{return await p.handle({url:a,request:e,event:t,params:r})}catch(e){e instanceof Error&&(s=e)}}if(this._catchHandler)return n.groupCollapsed("Error thrown when responding to: "+" ".concat(c(a),". Falling back to global Catch Handler.")),n.error("Error thrown by:",i),n.error(s),n.groupEnd(),this._catchHandler.handle({url:a,request:e,event:t});throw s}))),d}findMatchingRoute({url:e,sameOrigin:t,request:a,event:s}){const r=this._routes.get(a.method)||[];for(const o of r){let r;const i=o.match({url:e,sameOrigin:t,request:a,event:s});if(i)return i instanceof Promise&&n.warn("While routing ".concat(c(e),", an async ")+"matchCallback function was used. Please convert the following route to use a synchronous matchCallback function:",o),r=i,(Array.isArray(r)&&0===r.length||i.constructor===Object&&0===Object.keys(i).length||"boolean"==typeof i)&&(r=void 0),{route:o,params:r}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,A(e))}setCatchHandler(e){this._catchHandler=A(e)}registerRoute(e){o.isType(e,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),o.hasMethod(e,"match",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),o.isType(e.handler,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),o.hasMethod(e.handler,"handle",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.handler"}),o.isType(e.method,"string",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.method"}),this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new r("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(!(t>-1))throw new r("unregister-route-route-not-registered");this._routes.get(e.method).splice(t,1)}};try{self["workbox:strategies:7.0.0"]&&_()}catch(e){}var K={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};function W(e,t){const a=new URL(e);for(const e of t)a.searchParams.delete(e);return a.href}var F=new Set;function M(e){return new Promise((t=>setTimeout(t,e)))}function H(e){return"string"==typeof e?new Request(e):e}var V=class{constructor(e={}){this.cacheName=I(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,a="string"==typeof e.request?new Request(e.request):e.request,s="params"in e?e.params:void 0,i=new class{constructor(e,t){this._cacheKeys={},o.isInstance(t.event,ExtendableEvent,{moduleName:"workbox-strategies",className:"StrategyHandler",funcName:"constructor",paramName:"options.event"}),Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new class{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}},this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let a=H(e);if("navigate"===a.mode&&t instanceof FetchEvent&&t.preloadResponse){const e=await t.preloadResponse;if(e)return n.log("Using a preloaded navigation response for "+"'".concat(c(a.url),"'")),e}const s=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:t})}catch(e){if(e instanceof Error)throw new r("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const o=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions),n.debug("Network request for "+"'".concat(c(a.url),"' returned a response with ")+"status '".concat(e.status,"'."));for(const a of this.iterateCallbacks("fetchDidSucceed"))e=await a({event:t,request:o,response:e});return e}catch(e){throw n.log("Network request for "+"'".concat(c(a.url),"' threw an error."),e),s&&await this.runCallbacks("fetchDidFail",{error:e,event:t,originalRequest:s.clone(),request:o.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),a=t.clone();return this.waitUntil(this.cachePut(e,a)),t}async cacheMatch(e){const t=H(e);let a;const{cacheName:s,matchOptions:r}=this._strategy,o=await this.getCacheKey(t,"read"),c=Object.assign(Object.assign({},r),{cacheName:s});a=await caches.match(o,c),a?n.debug("Found a cached response in '".concat(s,"'.")):n.debug("No cached response found in '".concat(s,"'."));for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))a=await e({cacheName:s,matchOptions:r,cachedResponse:a,request:o,event:this.event})||void 0;return a}async cachePut(e,t){const a=H(e);await M(0);const s=await this.getCacheKey(a,"write");{if(s.method&&"GET"!==s.method)throw new r("attempt-to-cache-non-get-request",{url:c(s.url),method:s.method});const e=t.headers.get("Vary");e&&n.debug("The response for ".concat(c(s.url)," ")+"has a 'Vary: ".concat(e,"' header. ")+"Consider setting the {ignoreVary: true} option on your strategy to ensure cache matching and deletion works as expected.")}if(!t)throw n.error("Cannot cache non-existent response for "+"'".concat(c(s.url),"'.")),new r("cache-put-with-no-response",{url:c(s.url)});const o=await this._ensureResponseSafeToCache(t);if(!o)return n.debug("Response '".concat(c(s.url),"' ")+"will not be cached.",o),!1;const{cacheName:i,matchOptions:u}=this._strategy,l=await self.caches.open(i),h=this.hasCallback("cacheDidUpdate"),d=h?await async function(e,t,a,s){const r=W(t.url,a);if(t.url===r)return e.match(t,s);const n=Object.assign(Object.assign({},s),{ignoreSearch:!0}),o=await e.keys(t,n);for(const t of o)if(r===W(t.url,a))return e.match(t,s)}(l,s.clone(),["__WB_REVISION__"],u):null;n.debug("Updating the '".concat(i,"' cache with a new Response ")+"for ".concat(c(s.url),"."));try{await l.put(s,h?o.clone():o)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){n.log("About to run ".concat(F.size," ")+"callbacks to clean up caches.");for(const e of F)await e(),n.log(e,"is complete.");n.log("Finished running callbacks.")}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:i,oldResponse:d,newResponse:o.clone(),request:s,event:this.event});return!0}async getCacheKey(e,t){const a="".concat(e.url," | ").concat(t);if(!this._cacheKeys[a]){let s=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))s=H(await e({mode:t,request:s,event:this.event,params:this.params}));this._cacheKeys[a]=s}return this._cacheKeys[a]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const a of this.iterateCallbacks(e))await a(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const a=this._pluginStateMap.get(t),s=s=>{const r=Object.assign(Object.assign({},s),{state:a});return t[e](r)};yield s}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,a=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,a=!0,!t)break;return a||(t&&200!==t.status&&(t=void 0),t&&200!==t.status&&(0===t.status?n.warn("The response for '".concat(this.request.url,"' ")+"is an opaque response. The caching strategy that you're using will not cache opaque responses by default."):n.debug("The response for '".concat(this.request.url,"' ")+"returned a status code of '".concat(e.status,"' and won't ")+"be cached as a result."))),t}}(this,{event:t,request:a,params:s}),u=this._getResponse(i,a,t);return[u,this._awaitComplete(u,i,a,t)]}async _getResponse(e,t,a){let s;await e.runCallbacks("handlerWillStart",{event:a,request:t});try{if(s=await this._handle(t,e),!s||"error"===s.type)throw new r("no-response",{url:t.url})}catch(r){if(r instanceof Error)for(const n of e.iterateCallbacks("handlerDidError"))if(s=await n({error:r,event:a,request:t}),s)break;if(!s)throw r;n.log("While responding to '".concat(c(t.url),"', ")+"an ".concat(r instanceof Error?r.toString():""," error occurred. Using a fallback response provided by ")+"a handlerDidError plugin.")}for(const r of e.iterateCallbacks("handlerWillRespond"))s=await r({event:a,request:t,response:s});return s}async _awaitComplete(e,t,a,s){let r,n;try{r=await e}catch(e){}try{await t.runCallbacks("handlerDidRespond",{event:s,request:a,response:r}),await t.doneWaiting()}catch(e){e instanceof Error&&(n=e)}if(await t.runCallbacks("handlerDidComplete",{event:s,request:a,response:r,error:n}),t.destroy(),n)throw n}},Q=(e,t)=>"Using ".concat(e," to respond to '").concat(c(t.url),"'"),G=e=>{e&&(n.groupCollapsed("View the final response here."),n.log(e||"[No response returned]"),n.groupEnd())},z=class extends V{constructor(e={}){super(e),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift(K),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0,this._networkTimeoutSeconds&&o.isType(this._networkTimeoutSeconds,"number",{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"constructor",paramName:"networkTimeoutSeconds"})}async _handle(e,t){const a=[];o.isInstance(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"handle",paramName:"makeRequest"});const s=[];let c;if(this._networkTimeoutSeconds){const{id:r,promise:n}=this._getTimeoutPromise({request:e,logs:a,handler:t});c=r,s.push(n)}const i=this._getNetworkPromise({timeoutId:c,request:e,logs:a,handler:t});s.push(i);const u=await t.waitUntil((async()=>await t.waitUntil(Promise.race(s))||await i)());n.groupCollapsed(Q(this.constructor.name,e));for(const e of a)n.log(e);if(G(u),n.groupEnd(),!u)throw new r("no-response",{url:e.url});return u}_getTimeoutPromise({request:e,logs:t,handler:a}){let s;return{promise:new Promise((r=>{s=setTimeout((async()=>{t.push("Timing out the network response at "+"".concat(this._networkTimeoutSeconds," seconds.")),r(await a.cacheMatch(e))}),1e3*this._networkTimeoutSeconds)})),id:s}}async _getNetworkPromise({timeoutId:e,request:t,logs:a,handler:s}){let r,n;try{n=await s.fetchAndCachePut(t)}catch(e){e instanceof Error&&(r=e)}return e&&clearTimeout(e),n?a.push("Got response from network."):a.push("Unable to get a response from the network. Will respond with a cached response."),!r&&n||(n=await s.cacheMatch(t),n?a.push("Found a cached response in the '".concat(this.cacheName,"'")+" cache."):a.push("No response found in the '".concat(this.cacheName,"' cache."))),n}},Y=class extends V{constructor(e={}){super(e),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){let a,s;o.isInstance(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"_handle",paramName:"request"});try{const a=[t.fetch(e)];if(this._networkTimeoutSeconds){const e=M(1e3*this._networkTimeoutSeconds);a.push(e)}if(s=await Promise.race(a),!s)throw new Error("Timed out the network response after "+"".concat(this._networkTimeoutSeconds," seconds."))}catch(e){e instanceof Error&&(a=e)}if(n.groupCollapsed(Q(this.constructor.name,e)),s?n.log("Got response from network."):n.log("Unable to get a response from the network."),G(s),n.groupEnd(),!s)throw new r("no-response",{url:e.url,error:a});return s}};try{self["workbox:google-analytics:7.0.0"]&&_()}catch(e){}var J="www.google-analytics.com",$="www.googletagmanager.com",X=/^\/(\w+\/)?collect/,Z=e=>{const t=({url:e})=>e.hostname===J&&X.test(e.pathname),a=new Y({plugins:[e]});return[new j(t,a,"GET"),new j(t,a,"POST")]},ee=e=>{const t=new z({cacheName:e});return new j((({url:e})=>e.hostname===J&&"/analytics.js"===e.pathname),t,"GET")},te=e=>{const t=new z({cacheName:e});return new j((({url:e})=>e.hostname===$&&"/gtag/js"===e.pathname),t,"GET")},ae=e=>{const t=new z({cacheName:e});return new j((({url:e})=>e.hostname===$&&"/gtm.js"===e.pathname),t,"GET")};function se(e,t){const a=t();return e.waitUntil(a),a}try{self["workbox:precaching:7.0.0"]&&_()}catch(e){}function re(e){if(!e)throw new r("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:a}=e;if(!a)throw new r("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const s=new URL(a,location.href),n=new URL(a,location.href);return s.searchParams.set("__WB_REVISION__",t),{cacheKey:s.href,url:n.href}}var ne,oe=class{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const a=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return a?new Request(a,{headers:e.headers}):e},this._precacheController=e}};function ce(e){const t=e.length;t>0&&(n.groupCollapsed("During precaching cleanup, "+"".concat(t," cached ")+"request".concat(1===t?" was":"s were"," deleted.")),((e,t)=>{n.groupCollapsed(e);for(const e of t)n.log(e);n.groupEnd()})("Deleted Cache Requests",e),n.groupEnd())}function ie(e,t){if(0!==t.length){n.groupCollapsed(e);for(const e of t)n.log(e);n.groupEnd()}}async function ue(e,t){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new r("cross-origin-copy-response",{origin:a});const s=e.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},o=t?t(n):n,c=function(){if(void 0===ne){const e=new Response("");if("body"in e)try{new Response(e.body),ne=!0}catch(e){ne=!1}ne=!1}return ne}()?s.body:await s.blob();return new Response(c,o)}var le=class e extends V{constructor(t={}){t.cacheName=P(t.cacheName),super(t),this._fallbackToNetwork=!1!==t.fallbackToNetwork,this.plugins.push(e.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const a=await t.cacheMatch(e);return a||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let a;const s=t.params||{};if(!this._fallbackToNetwork)throw new r("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{n.warn("The precached response for "+"".concat(c(e.url)," in ").concat(this.cacheName," was not ")+"found. Falling back to the network.");const r=s.integrity,o=e.integrity,i=!o||o===r;if(a=await t.fetch(new Request(e,{integrity:"no-cors"!==e.mode?o||r:void 0})),r&&i&&"no-cors"!==e.mode){this._useDefaultCacheabilityPluginIfNeeded();await t.cachePut(e,a.clone())&&n.log("A response for ".concat(c(e.url)," ")+'was used to "repair" the precache.')}}{const r=s.cacheKey||await t.getCacheKey(e,"read");n.groupCollapsed("Precaching is responding to: "+c(e.url)),n.log("Serving the precached url: ".concat(c(r instanceof Request?r.url:r))),n.groupCollapsed("View request details here."),n.log(e),n.groupEnd(),n.groupCollapsed("View response details here."),n.log(a),n.groupEnd(),n.groupEnd()}return a}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const a=await t.fetch(e);if(!await t.cachePut(e,a.clone()))throw new r("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let t=null,a=0;for(const[s,r]of this.plugins.entries())r!==e.copyRedirectedCacheableResponsesPlugin&&(r===e.defaultPrecacheCacheabilityPlugin&&(t=s),r.cacheWillUpdate&&a++);0===a?this.plugins.push(e.defaultPrecacheCacheabilityPlugin):a>1&&null!==t&&this.plugins.splice(t,1)}};le.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},le.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await ue(e):e};var he,de=class extends j{constructor(e,t,a){o.isInstance(e,RegExp,{moduleName:"workbox-routing",className:"RegExpRoute",funcName:"constructor",paramName:"pattern"});super((({url:t})=>{const a=e.exec(t.href);if(a){if(t.origin===location.origin||0===a.index)return a.slice(1);n.debug("The regular expression '".concat(e.toString(),"' only partially matched ")+"against the cross-origin URL '".concat(t.toString(),"'. RegExpRoute's will only ")+"handle cross-origin requests if they match the entire URL.")}}),t,a)}},pe=()=>(he||((he=new B).addFetchListener(),he.addCacheListener()),he);function fe(e,t,a){let s;if("string"==typeof e){const o=new URL(e,location.href);{if(!e.startsWith("/")&&!e.startsWith("http"))throw new r("invalid-string",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});const t=e.startsWith("http")?o.pathname:e,a="[*:?+]";new RegExp("".concat(a)).exec(t)&&n.debug("The '$capture' parameter contains an Express-style wildcard "+"character (".concat(a,"). Strings are now always interpreted as ")+"exact matches; use a RegExp for partial or wildcard matches.")}s=new j((({url:t})=>(t.pathname===o.pathname&&t.origin!==o.origin&&n.debug("".concat(e," only partially matches the cross-origin URL ")+"".concat(t.toString(),". This route will only handle cross-origin requests ")+"if they match the entire URL."),t.href===o.href)),t,a)}else if(e instanceof RegExp)s=new de(e,t,a);else if("function"==typeof e)s=new j(e,t,a);else{if(!(e instanceof j))throw new r("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});s=e}return pe().registerRoute(s),s}self.__WB_DISABLE_DEV_LOGS=!0;var me={handlerWillRespond:async({response:e})=>{const t=new Headers(e.headers);return t.set("Cross-Origin-Embedder-Policy","require-corp"),t.set("Cross-Origin-Opener-Policy","same-origin"),new Response(e.body,{headers:t,status:e.status,statusText:e.statusText})}};((e={})=>{const t=D(e.cacheName),a=new class{constructor(e,t){this.fetchDidFail=async({request:e})=>{await this._queue.pushRequest({request:e})},this._queue=new class{constructor(e,{forceSyncFallback:t,onSync:a,maxRetentionTime:s}={}){if(this._syncInProgress=!1,this._requestsAddedDuringSync=!1,C.has(e))throw new r("duplicate-queue-name",{name:e});C.add(e),this._name=e,this._onSync=a||this.replayRequests,this._maxRetentionTime=s||10080,this._forceSyncFallback=Boolean(t),this._queueStore=new class{constructor(e){this._queueName=e,this._queueDb=new class{constructor(){this._db=null}async addEntry(e){const t=(await this.getDb()).transaction(x,"readwrite",{durability:"relaxed"});await t.store.add(e),await t.done}async getFirstEntryId(){const e=await this.getDb(),t=await e.transaction(x).store.openCursor();return null==t?void 0:t.value.id}async getAllEntriesByQueueName(e){const t=await this.getDb();return await t.getAllFromIndex(x,R,IDBKeyRange.only(e))||new Array}async getEntryCountByQueueName(e){return(await this.getDb()).countFromIndex(x,R,IDBKeyRange.only(e))}async deleteEntry(e){const t=await this.getDb();await t.delete(x,e)}async getFirstEntryByQueueName(e){return await this.getEndEntryFromIndex(IDBKeyRange.only(e),"next")}async getLastEntryByQueueName(e){return await this.getEndEntryFromIndex(IDBKeyRange.only(e),"prev")}async getEndEntryFromIndex(e,t){const a=await this.getDb(),s=await a.transaction(x).store.index(R).openCursor(e,t);return null==s?void 0:s.value}async getDb(){return this._db||(this._db=await function(e,t,{blocked:a,upgrade:s,blocking:r,terminated:n}={}){const o=indexedDB.open(e,t),c=y(o);return s&&o.addEventListener("upgradeneeded",(e=>{s(y(o.result),e.oldVersion,e.newVersion,y(o.transaction),e)})),a&&o.addEventListener("blocked",(e=>a(e.oldVersion,e.newVersion,e))),c.then((e=>{n&&e.addEventListener("close",(()=>n())),r&&e.addEventListener("versionchange",(e=>r(e.oldVersion,e.newVersion,e)))})).catch((()=>{})),c}("workbox-background-sync",3,{upgrade:this._upgradeDb})),this._db}_upgradeDb(e,t){t>0&&t<3&&e.objectStoreNames.contains(x)&&e.deleteObjectStore(x),e.createObjectStore(x,{autoIncrement:!0,keyPath:"id"}).createIndex(R,R,{unique:!1})}}}async pushEntry(e){o.isType(e,"object",{moduleName:"workbox-background-sync",className:"QueueStore",funcName:"pushEntry",paramName:"entry"}),o.isType(e.requestData,"object",{moduleName:"workbox-background-sync",className:"QueueStore",funcName:"pushEntry",paramName:"entry.requestData"}),delete e.id,e.queueName=this._queueName,await this._queueDb.addEntry(e)}async unshiftEntry(e){o.isType(e,"object",{moduleName:"workbox-background-sync",className:"QueueStore",funcName:"unshiftEntry",paramName:"entry"}),o.isType(e.requestData,"object",{moduleName:"workbox-background-sync",className:"QueueStore",funcName:"unshiftEntry",paramName:"entry.requestData"});const t=await this._queueDb.getFirstEntryId();t?e.id=t-1:delete e.id,e.queueName=this._queueName,await this._queueDb.addEntry(e)}async popEntry(){return this._removeEntry(await this._queueDb.getLastEntryByQueueName(this._queueName))}async shiftEntry(){return this._removeEntry(await this._queueDb.getFirstEntryByQueueName(this._queueName))}async getAll(){return await this._queueDb.getAllEntriesByQueueName(this._queueName)}async size(){return await this._queueDb.getEntryCountByQueueName(this._queueName)}async deleteEntry(e){await this._queueDb.deleteEntry(e)}async _removeEntry(e){return e&&await this.deleteEntry(e.id),e}}(this._name),this._addSyncListener()}get name(){return this._name}async pushRequest(e){o.isType(e,"object",{moduleName:"workbox-background-sync",className:"Queue",funcName:"pushRequest",paramName:"entry"}),o.isInstance(e.request,Request,{moduleName:"workbox-background-sync",className:"Queue",funcName:"pushRequest",paramName:"entry.request"}),await this._addRequest(e,"push")}async unshiftRequest(e){o.isType(e,"object",{moduleName:"workbox-background-sync",className:"Queue",funcName:"unshiftRequest",paramName:"entry"}),o.isInstance(e.request,Request,{moduleName:"workbox-background-sync",className:"Queue",funcName:"unshiftRequest",paramName:"entry.request"}),await this._addRequest(e,"unshift")}async popRequest(){return this._removeRequest("pop")}async shiftRequest(){return this._removeRequest("shift")}async getAll(){const e=await this._queueStore.getAll(),t=Date.now(),a=[];for(const s of e){const e=60*this._maxRetentionTime*1e3;t-s.timestamp>e?await this._queueStore.deleteEntry(s.id):a.push(S(s))}return a}async size(){return await this._queueStore.size()}async _addRequest({request:e,metadata:t,timestamp:a=Date.now()},s){const r={requestData:(await E.fromRequest(e.clone())).toObject(),timestamp:a};switch(t&&(r.metadata=t),s){case"push":await this._queueStore.pushEntry(r);break;case"unshift":await this._queueStore.unshiftEntry(r)}n.log("Request for '".concat(c(e.url),"' has ")+"been added to background sync queue '".concat(this._name,"'.")),this._syncInProgress?this._requestsAddedDuringSync=!0:await this.registerSync()}async _removeRequest(e){const t=Date.now();let a;switch(e){case"pop":a=await this._queueStore.popEntry();break;case"shift":a=await this._queueStore.shiftEntry()}if(a){const s=60*this._maxRetentionTime*1e3;return t-a.timestamp>s?this._removeRequest(e):S(a)}}async replayRequests(){let e;for(;e=await this.shiftRequest();)try{await fetch(e.request.clone()),n.log("Request for '".concat(c(e.request.url),"' ")+"has been replayed in queue '".concat(this._name,"'"))}catch(t){throw await this.unshiftRequest(e),n.log("Request for '".concat(c(e.request.url),"' ")+"failed to replay, putting it back in queue '".concat(this._name,"'")),new r("queue-replay-failed",{name:this._name})}n.log("All requests in queue '".concat(this.name,"' have successfully ")+"replayed; the queue is now empty!")}async registerSync(){if("sync"in self.registration&&!this._forceSyncFallback)try{await self.registration.sync.register("".concat(T,":").concat(this._name))}catch(e){n.warn("Unable to register sync event for '".concat(this._name,"'."),e)}}_addSyncListener(){"sync"in self.registration&&!this._forceSyncFallback?self.addEventListener("sync",(e=>{if(e.tag==="".concat(T,":").concat(this._name)){n.log("Background sync for tag '".concat(e.tag,"' ")+"has been received");const t=async()=>{let t;this._syncInProgress=!0;try{await this._onSync({queue:this})}catch(e){if(e instanceof Error)throw t=e,t}finally{!this._requestsAddedDuringSync||t&&!e.lastChance||await this.registerSync(),this._syncInProgress=!1,this._requestsAddedDuringSync=!1}};e.waitUntil(t())}})):(n.log("Background sync replaying without background sync event"),this._onSync({queue:this}))}static get _queueNames(){return C}}(e,t)}}("workbox-google-analytics",{maxRetentionTime:2880,onSync:(s=e,async({queue:e})=>{let t;for(;t=await e.shiftRequest();){const{request:a,timestamp:r}=t,o=new URL(a.url);try{const e="POST"===a.method?new URLSearchParams(await a.clone().text()):o.searchParams,t=r-(Number(e.get("qt"))||0),i=Date.now()-t;if(e.set("qt",String(i)),s.parameterOverrides)for(const t of Object.keys(s.parameterOverrides)){const a=s.parameterOverrides[t];e.set(t,a)}"function"==typeof s.hitFilter&&s.hitFilter.call(null,e),await fetch(new Request(o.origin+o.pathname,{body:e.toString(),method:"POST",mode:"cors",credentials:"omit",headers:{"Content-Type":"text/plain"}})),n.log("Request for '".concat(c(o.href),"' ")+"has been replayed")}catch(a){throw await e.unshiftRequest(t),n.log("Request for '".concat(c(o.href),"' ")+"failed to replay, putting it back in the queue."),a}}n.log("All Google Analytics request successfully replayed; the queue is now empty!")})});var s;const i=[ae(t),ee(t),te(t),...Z(a)],u=new B;for(const e of i)u.registerRoute(e);u.addFetchListener()})();var ge,ye=new class extends V{constructor(e={}){super(e),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift(K)}async _handle(e,t){const a=[];o.isInstance(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"handle",paramName:"request"});const s=t.fetchAndCachePut(e).catch((()=>{}));t.waitUntil(s);let c,i=await t.cacheMatch(e);if(i)a.push("Found a cached response in the '".concat(this.cacheName,"'")+" cache. Will update with the network response in the background.");else{a.push("No response found in the '".concat(this.cacheName,"' cache. ")+"Will wait for the network response.");try{i=await s}catch(e){e instanceof Error&&(c=e)}}n.groupCollapsed(Q(this.constructor.name,e));for(const e of a)n.log(e);if(G(i),n.groupEnd(),!i)throw new r("no-response",{url:e.url,error:c});return i}}({cacheName:"modules",plugins:[me]});ge=ye,pe().setDefaultHandler(ge);var be=new class{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:a=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new le({cacheName:P(e),plugins:[...t,new oe({precacheController:this})],fallbackToNetwork:a}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){o.isArray(e,{moduleName:"workbox-precaching",className:"PrecacheController",funcName:"addToCacheList",paramName:"entries"});const t=[];for(const a of e){"string"==typeof a?t.push(a):a&&void 0===a.revision&&t.push(a.url);const{cacheKey:e,url:s}=re(a),o="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(s)&&this._urlsToCacheKeys.get(s)!==e)throw new r("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(s),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new r("add-to-cache-list-conflicting-integrities",{url:s});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(s,e),this._urlsToCacheModes.set(s,o),t.length>0){const e="Workbox is precaching URLs without revision "+"info: ".concat(t.join(", "),"\nThis is generally NOT safe. ")+"Learn more at https://bit.ly/wb-precache";n.warn(e)}}}install(e){return se(e,(async()=>{const t=new class{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:a})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;a?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return a}}};this.strategy.plugins.push(t);for(const[t,a]of this._urlsToCacheKeys){const s=this._cacheKeysToIntegrities.get(a),r=this._urlsToCacheModes.get(t),n=new Request(t,{integrity:s,cache:r,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:a},request:n,event:e}))}const{updatedURLs:a,notUpdatedURLs:s}=t;return function(e,t){const a=e.length,s=t.length;if(a||s){let r="Precaching ".concat(a," file").concat(1===a?"":"s",".");s>0&&(r+=" ".concat(s," ")+"file".concat(1===s?" is":"s are"," already cached.")),n.groupCollapsed(r),ie("View newly precached URLs.",e),ie("View previously precached URLs.",t),n.groupEnd()}}(a,s),{updatedURLs:a,notUpdatedURLs:s}}))}activate(e){return se(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),a=new Set(this._urlsToCacheKeys.values()),s=[];for(const r of t)a.has(r.url)||(await e.delete(r),s.push(r.url));return ce(s),{deletedURLs:s}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,a=this.getCacheKeyForURL(t);if(a){return(await self.caches.open(this.strategy.cacheName)).match(a)}}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new r("non-precached-url",{url:e});return a=>(a.request=new Request(e),a.params=Object.assign({cacheKey:t},a.params),this.strategy.handle(a))}}({cacheName:"assets",plugins:[me]});be.addToCacheList([{url:"api/index.html",revision:"5151288040900199e97ba13705a3de09"},{url:"gen/index.html",revision:"2e38e9ec62269a423a55f9bbd73b1f7f"},{url:"index.html",revision:"0a1a168c7f7356816135e643319a49eb"},{url:"api/api.js",revision:"adc684e8473b7ec6348e9310c5cbb7d1"},{url:"gen/gen.js",revision:"5514a7afa2b5f993c4e31bbc96d7142a"},{url:"main.js",revision:"9e12746e8bb3827fc476e187fe32853d"},{url:"modules/chess.js",revision:"b61b85c0fd644d53564f85233f11962c"},{url:"modules/ptt.js",revision:"4edf5faa588eab503d23fbcc5710c9da"},{url:"modules/py489.asm.js",revision:"803deb35c93b857fb136358d86f912eb"},{url:"modules/py489.js",revision:"411d02157c88565cb0ffb85a837b767a"},{url:"sdk.js",revision:"28d9af2940ae36ac7cec12ffec31a217"},{url:"lib/css/all.min.css",revision:"6c0915b5c20b557a61c54e38c214a37b"},{url:"style.css",revision:"948f842b95091a340bc655ab5333aa5d"},{url:"lib/webfonts/fa-solid-900.woff2",revision:"2cafc8647df61c11c87f3d86ecdc4e6b"},{url:"assets/x1/1echecs26.png",revision:"dbc726b96d91b97b2ad53b3ccb8a9e48"},{url:"assets/x1/1echecs32.png",revision:"d9e72216e59873e0d55579ae5c82a889"},{url:"assets/x1/1echecs38.png",revision:"844f49c70b8100c37c24f4222ca5fc89"},{url:"assets/x1/1echecs44.png",revision:"bf81efdbdabf9b270870f425663c8cb0"},{url:"assets/x1/alpha26.png",revision:"305a3d24372ce80575d4fca38b69a471"},{url:"assets/x1/alpha32.png",revision:"ffea054c8fa673d703d0a29e3a822e56"},{url:"assets/x1/alpha38.png",revision:"64c51f078b8ec59bfa4f272b124d98db"},{url:"assets/x1/alpha44.png",revision:"8c0972bd4b0bef531bf7c7f8ed0d1849"},{url:"assets/x1/goodCompanion26.png",revision:"a840624ce5087697dc4345825f903bd2"},{url:"assets/x1/goodCompanion32.png",revision:"437c4c9b067e6f766bc9fc478deba8a5"},{url:"assets/x1/goodCompanion38.png",revision:"5dbf6ca68583149705bbffb5ebe35715"},{url:"assets/x1/goodCompanion44.png",revision:"25e9ad45edf2c8266ed6f5465769767f"},{url:"assets/x1/kilfiger26.png",revision:"b73296336c463726ed7d013fd15c3b21"},{url:"assets/x1/kilfiger32.png",revision:"8526d7037659113b061ee2fe207bbcf8"},{url:"assets/x1/kilfiger38.png",revision:"85440a3c9a0d3f1776a9488b6ab9db1a"},{url:"assets/x1/kilfiger44.png",revision:"1183967ce8f0ce59dc121ce67e8800da"},{url:"assets/x1/merida26.png",revision:"9c0f351be0692bdab30bc1cbb10656c9"},{url:"assets/x1/merida32.png",revision:"a5468ff522278830ded245b7972d8dd7"},{url:"assets/x1/merida38.png",revision:"a4b31c981e83bce5788b97b8c6f3a0a7"},{url:"assets/x1/merida44.png",revision:"9f20ee53f583731b252446b29aee52b3"},{url:"assets/x1/mpchess26.png",revision:"ffd7b4dbdf00350e170b928500dd2815"},{url:"assets/x1/mpchess32.png",revision:"9eac902f04bbcb51b51701beb4e2566f"},{url:"assets/x1/mpchess38.png",revision:"507c558bf87ecd7e1a2887ba404d10c0"},{url:"assets/x1/mpchess44.png",revision:"36d142e3c3c02e09e415fc25e5d9e222"},{url:"assets/x1/skak26.png",revision:"156fb345312da6c5b9863bf39a5aeadd"},{url:"assets/x1/skak32.png",revision:"0be270a8dbb7edfb0dcfc2c15c2f9d6e"},{url:"assets/x1/skak38.png",revision:"2f86d757996dcd31513b340dea5925b5"},{url:"assets/x1/skak44.png",revision:"a44c2e0b8a4677adab1672a0a55302bb"},{url:"assets/x1/symbol26.png",revision:"7e5cd5d03872dcd810d97bf5486a42d0"},{url:"assets/x1/symbol32.png",revision:"99bbb4b4c4b3c4acc2a5067fadce6bd7"},{url:"assets/x1/symbol38.png",revision:"d7e6dccecdf3375aa45e9a7ca24cb366"},{url:"assets/x1/symbol44.png",revision:"867a1da1287229183429867344baa2df"},{url:"assets/x2/1echecs26.png",revision:"a5fabb7c50aae21a5f397546cdcdb93a"},{url:"assets/x2/1echecs32.png",revision:"288907ac1def6de59512bff2d83d88e4"},{url:"assets/x2/1echecs38.png",revision:"42dd13f0fac5baa3942f3571cd591a8b"},{url:"assets/x2/1echecs44.png",revision:"281408a0bd075bf5bbd6f43ee83f2ea6"},{url:"assets/x2/alpha26.png",revision:"7f2627379329b0b5bf91721d4ffe0095"},{url:"assets/x2/alpha32.png",revision:"ebae3b60ca0ba71775efb1520c524298"},{url:"assets/x2/alpha38.png",revision:"8a9c75ddc2adadfb7d1c3d505b95d726"},{url:"assets/x2/alpha44.png",revision:"4cb36808e4b1417c3386d67c2f46bf49"},{url:"assets/x2/goodCompanion26.png",revision:"eb64eb7fd4a3fb6e3c8b79f6eff145ac"},{url:"assets/x2/goodCompanion32.png",revision:"572508a70a2dd03b1f7e8a086dbd5a65"},{url:"assets/x2/goodCompanion38.png",revision:"aa0df3d0faebf5dd11eeeac4a9a9233f"},{url:"assets/x2/goodCompanion44.png",revision:"9c125a249a94e63219d7c26c2eba8c4b"},{url:"assets/x2/kilfiger26.png",revision:"a175614d69859504d16d1b3e0afff776"},{url:"assets/x2/kilfiger32.png",revision:"c24a1775683e5d7fbf90df9faa61ea32"},{url:"assets/x2/kilfiger38.png",revision:"2fa8e442e403477544ea5d6ab2baf0cc"},{url:"assets/x2/kilfiger44.png",revision:"2cabcc4671c95c6d0ada8c4787f42f2d"},{url:"assets/x2/merida26.png",revision:"76e8cc5f2482cec2721827b09770d64b"},{url:"assets/x2/merida32.png",revision:"3cddde4acdadbdd200e61cb3833c7f46"},{url:"assets/x2/merida38.png",revision:"63074205f53952fc9315e4e97ff8affd"},{url:"assets/x2/merida44.png",revision:"9c497b6e71e80cb1aea21693bf556f80"},{url:"assets/x2/mpchess26.png",revision:"75fd71198dec22ebc35f7198cc5ccb76"},{url:"assets/x2/mpchess32.png",revision:"a97902b2336b674e26aa2853d74120e1"},{url:"assets/x2/mpchess38.png",revision:"7667a80931b8e77f54fa80df01e02842"},{url:"assets/x2/mpchess44.png",revision:"035f6705eaf6d64bc8a67be8af465b0e"},{url:"assets/x2/skak26.png",revision:"89c581224760b0faed30adb5e25318d7"},{url:"assets/x2/skak32.png",revision:"b0dea80d7b352f45e3b3ad3b17e6bc5d"},{url:"assets/x2/skak38.png",revision:"ca6333a93bcab10d67bfeb4547035c5d"},{url:"assets/x2/skak44.png",revision:"95def9316c7d809a82debd98c9a477ae"},{url:"assets/x2/symbol26.png",revision:"de7aa92bcc0737415c84cb4273d679cc"},{url:"assets/x2/symbol32.png",revision:"2c3ff9dcd69fafcd6e094e6f784bdfbb"},{url:"assets/x2/symbol38.png",revision:"a520de5ed63d9700c0563041b5668715"},{url:"assets/x2/symbol44.png",revision:"0f19a3d849ba92e9dfcebd8df7d1c856"},{url:"assets/icon/icon-32.png",revision:"96a0183aa4cf7546e01fd3d57cd2e5a9"},{url:"assets/icon/icon-192.png",revision:"811b7d2bfb4e4adb30ec7442f706bc25"},{url:"modules/py489.wasm",revision:"468ce3fa7445dea3f9173dda9d6e8948"}]),fe(new class extends j{constructor(e,t){super((({request:a})=>{const s=e.getURLsToCacheKeys();for(const r of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:a="index.html",cleanURLs:s=!0,urlManipulation:r}={}){const n=new URL(e,location.href);n.hash="",yield n.href;const o=function(e,t=[]){for(const a of[...e.searchParams.keys()])t.some((e=>e.test(a)))&&e.searchParams.delete(a);return e}(n,t);if(yield o.href,a&&o.pathname.endsWith("/")){const e=new URL(o.href);e.pathname+=a,yield e.href}if(s){const e=new URL(o.href);e.pathname+=".html",yield e.href}if(r){const e=r({url:n});for(const t of e)yield t.href}}(a.url,t)){const t=s.get(r);if(t){return{cacheKey:t,integrity:e.getIntegrityForCacheKey(t)}}}n.debug("Precaching did not find a match for "+c(a.url))}),e.strategy)}}(be,{ignoreURLParametersMatching:[/.*/],cleanURLs:!1}));var we=new Map,ve=0;fe((({url:e})=>e.pathname.startsWith("/fen-tool/share")),(async({event:e})=>{const t=await e.request.formData(),a=t.get("fen"),s=t.get("image"),r=[];a&&r.push("fen="+encodeURIComponent(a)),s&&(we.set(++ve,s),r.push("image="+ve));const n="/fen-tool"+(r.length>0?"?"+r.join("&"):"");return Response.redirect(n,303)}),"POST"),fe((({url:e})=>e.pathname.startsWith("/fen-tool/shareImage")),(({url:e})=>{const t=Number(e.searchParams.get("image")),a=we.get(t);return we.delete(t),new Response(a)})),fe((({url:e})=>"mutsuntsai.github.io"!=e.host&&!e.host.startsWith("localhost")),new Y({fetchOptions:{cache:"reload"}})),self.addEventListener("install",(e=>{self.skipWaiting(),console.log("service worker installing"),be.install(e)})),self.addEventListener("activate",(e=>{be.activate(e)}))})();