(()=>{try{self["workbox:core:7.0.0"]&&_()}catch(e){}var e,t,s={"invalid-value":({paramName:e,validValueDescription:t,value:s})=>{if(!e||!t)throw new Error("Unexpected input to 'invalid-value' error.");return`The '${e}' parameter was given a value with an unexpected value. ${t} Received a value of ${JSON.stringify(s)}.`},"not-an-array":({moduleName:e,className:t,funcName:s,paramName:a})=>{if(!(e&&t&&s&&a))throw new Error("Unexpected input to 'not-an-array' error.");return`The parameter '${a}' passed into '${e}.${t}.${s}()' must be an array.`},"incorrect-type":({expectedType:e,paramName:t,moduleName:s,className:a,funcName:r})=>{if(!(e&&t&&s&&r))throw new Error("Unexpected input to 'incorrect-type' error.");return`The parameter '${t}' passed into '${s}.${a?`${a}.`:""}${r}()' must be of type ${e}.`},"incorrect-class":({expectedClassName:e,paramName:t,moduleName:s,className:a,funcName:r,isReturnValueProblem:n})=>{if(!e||!s||!r)throw new Error("Unexpected input to 'incorrect-class' error.");const o=a?`${a}.`:"";return n?`The return value from '${s}.${o}${r}()' must be an instance of class ${e}.`:`The parameter '${t}' passed into '${s}.${o}${r}()' must be an instance of class ${e}.`},"missing-a-method":({expectedMethod:e,paramName:t,moduleName:s,className:a,funcName:r})=>{if(!(e&&t&&s&&a&&r))throw new Error("Unexpected input to 'missing-a-method' error.");return`${s}.${a}.${r}() expected the '${t}' parameter to expose a '${e}' method.`},"add-to-cache-list-unexpected-type":({entry:e})=>`An unexpected entry was passed to 'workbox-precaching.PrecacheController.addToCacheList()' The entry '${JSON.stringify(e)}' isn't supported. You must supply an array of strings with one or more characters, objects with a url property or Request objects.`,"add-to-cache-list-conflicting-entries":({firstEntry:e,secondEntry:t})=>{if(!e||!t)throw new Error("Unexpected input to 'add-to-cache-list-duplicate-entries' error.");return`Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL ${e} but different revision details. Workbox is unable to cache and version the asset correctly. Please remove one of the entries.`},"plugin-error-request-will-fetch":({thrownErrorMessage:e})=>{if(!e)throw new Error("Unexpected input to 'plugin-error-request-will-fetch', error.");return`An error was thrown by a plugins 'requestWillFetch()' method. The thrown error message was: '${e}'.`},"invalid-cache-name":({cacheNameId:e,value:t})=>{if(!e)throw new Error("Expected a 'cacheNameId' for error 'invalid-cache-name'");return`You must provide a name containing at least one character for setCacheDetails({${e}: '...'}). Received a value of '${JSON.stringify(t)}'`},"unregister-route-but-not-found-with-method":({method:e})=>{if(!e)throw new Error("Unexpected input to 'unregister-route-but-not-found-with-method' error.");return`The route you're trying to unregister was not  previously registered for the method type '${e}'.`},"unregister-route-route-not-registered":()=>"The route you're trying to unregister was not previously registered.","queue-replay-failed":({name:e})=>`Replaying the background sync queue '${e}' failed.`,"duplicate-queue-name":({name:e})=>`The Queue name '${e}' is already being used. All instances of backgroundSync.Queue must be given unique names.`,"expired-test-without-max-age":({methodName:e,paramName:t})=>`The '${e}()' method can only be used when the '${t}' is used in the constructor.`,"unsupported-route-type":({moduleName:e,className:t,funcName:s,paramName:a})=>`The supplied '${a}' parameter was an unsupported type. Please check the docs for ${e}.${t}.${s} for valid input types.`,"not-array-of-class":({value:e,expectedClass:t,moduleName:s,className:a,funcName:r,paramName:n})=>`The supplied '${n}' parameter must be an array of '${t}' objects. Received '${JSON.stringify(e)},'. Please check the call to ${s}.${a}.${r}() to fix the issue.`,"max-entries-or-age-required":({moduleName:e,className:t,funcName:s})=>`You must define either config.maxEntries or config.maxAgeSecondsin ${e}.${t}.${s}`,"statuses-or-headers-required":({moduleName:e,className:t,funcName:s})=>`You must define either config.statuses or config.headersin ${e}.${t}.${s}`,"invalid-string":({moduleName:e,funcName:t,paramName:s})=>{if(!s||!e||!t)throw new Error("Unexpected input to 'invalid-string' error.");return`When using strings, the '${s}' parameter must start with 'http' (for cross-origin matches) or '/' (for same-origin matches). Please see the docs for ${e}.${t}() for more info.`},"channel-name-required":()=>"You must provide a channelName to construct a BroadcastCacheUpdate instance.","invalid-responses-are-same-args":()=>"The arguments passed into responsesAreSame() appear to be invalid. Please ensure valid Responses are used.","expire-custom-caches-only":()=>"You must provide a 'cacheName' property when using the expiration plugin with a runtime caching strategy.","unit-must-be-bytes":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'unit-must-be-bytes' error.");return`The 'unit' portion of the Range header must be set to 'bytes'. The Range header provided was "${e}"`},"single-range-only":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'single-range-only' error.");return`Multiple ranges are not supported. Please use a  single start value, and optional end value. The Range header provided was "${e}"`},"invalid-range-values":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'invalid-range-values' error.");return`The Range header is missing both start and end values. At least one of those values is needed. The Range header provided was "${e}"`},"no-range-header":()=>"No Range header was found in the Request provided.","range-not-satisfiable":({size:e,start:t,end:s})=>`The start (${t}) and end (${s}) values in the Range are not satisfiable by the cached response, which is ${e} bytes.`,"attempt-to-cache-non-get-request":({url:e,method:t})=>`Unable to cache '${e}' because it is a '${t}' request and only 'GET' requests can be cached.`,"cache-put-with-no-response":({url:e})=>`There was an attempt to cache '${e}' but the response was not defined.`,"no-response":({url:e,error:t})=>{let s=`The strategy could not generate a response for '${e}'.`;return t&&(s+=` The underlying error is ${t}.`),s},"bad-precaching-response":({url:e,status:t})=>`The precaching request for '${e}' failed`+(t?` with an HTTP status of ${t}.`:"."),"non-precached-url":({url:e})=>`createHandlerBoundToURL('${e}') was called, but that URL is not precached. Please pass in a URL that is precached instead.`,"add-to-cache-list-conflicting-integrities":({url:e})=>`Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL ${e} with different integrity values. Please remove one of them.`,"missing-precache-entry":({cacheName:e,url:t})=>`Unable to find a precached response in ${e} for ${t}.`,"cross-origin-copy-response":({origin:e})=>`workbox-core.copyResponse() can only be used with same-origin responses. It was passed a response with origin ${e}.`,"opaque-streams-source":({type:e})=>{const t=`One of the workbox-streams sources resulted in an '${e}' response.`;return"opaqueredirect"===e?`${t} Please do not use a navigation request that results in a redirect as a source.`:`${t} Please ensure your sources are CORS-enabled.`}},a=(e,t={})=>{const a=s[e];if(!a)throw new Error(`Unable to find message for code '${e}'.`);return a(t)},r=class extends Error{constructor(e,t){super(a(e,t)),this.name=e,this.details=t}},n=(()=>{"__WB_DISABLE_DEV_LOGS"in globalThis||(self.__WB_DISABLE_DEV_LOGS=!1);let e=!1;const t={debug:"#7f8c8d",log:"#2ecc71",warn:"#f39c12",error:"#c0392b",groupCollapsed:"#3498db",groupEnd:null},s=function(s,a){if(self.__WB_DISABLE_DEV_LOGS)return;if("groupCollapsed"===s&&/^((?!chrome|android).)*safari/i.test(navigator.userAgent))return void console[s](...a);const r=e?[]:["%cworkbox",[`background: ${t[s]}`,"border-radius: 0.5em","color: white","font-weight: bold","padding: 2px 0.5em"].join(";")];console[s](...r,...a),"groupCollapsed"===s&&(e=!0),"groupEnd"===s&&(e=!1)},a={},r=Object.keys(t);for(const e of r){const t=e;a[t]=(...e)=>{s(t,e)}}return a})(),o={hasMethod:(e,t,s)=>{if("function"!==typeof e[t])throw s.expectedMethod=t,new r("missing-a-method",s)},isArray:(e,t)=>{if(!Array.isArray(e))throw new r("not-an-array",t)},isInstance:(e,t,s)=>{if(!(e instanceof t))throw s.expectedClassName=t.name,new r("incorrect-class",s)},isOneOf:(e,t,s)=>{if(!t.includes(e))throw s.validValueDescription=`Valid values are ${JSON.stringify(t)}.`,new r("invalid-value",s)},isType:(e,t,s)=>{if(typeof e!==t)throw s.expectedType=t,new r("incorrect-type",s)},isArrayOfClass:(e,t,s)=>{const a=new r("not-array-of-class",s);if(!Array.isArray(e))throw a;for(const s of e)if(!(s instanceof t))throw a}},i=e=>new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),""),c=(e,t)=>t.some((t=>e instanceof t));var u=new WeakMap,l=new WeakMap,h=new WeakMap,d=new WeakMap,p=new WeakMap;var f={get(e,t,s){if(e instanceof IDBTransaction){if("done"===t)return l.get(e);if("objectStoreNames"===t)return e.objectStoreNames||h.get(e);if("store"===t)return s.objectStoreNames[1]?void 0:s.objectStore(s.objectStoreNames[0])}return y(e[t])},set:(e,t,s)=>(e[t]=s,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function m(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(t||(t=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(b(this),t),y(u.get(this))}:function(...t){return y(e.apply(b(this),t))}:function(t,...s){const a=e.call(b(this),t,...s);return h.set(a,t.sort?t.sort():[t]),y(a)}}function g(t){return"function"==typeof t?m(t):(t instanceof IDBTransaction&&function(e){if(l.has(e))return;const t=new Promise(((t,s)=>{const a=()=>{e.removeEventListener("complete",r),e.removeEventListener("error",n),e.removeEventListener("abort",n)},r=()=>{t(),a()},n=()=>{s(e.error||new DOMException("AbortError","AbortError")),a()};e.addEventListener("complete",r),e.addEventListener("error",n),e.addEventListener("abort",n)}));l.set(e,t)}(t),c(t,e||(e=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(t,f):t)}function y(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,s)=>{const a=()=>{e.removeEventListener("success",r),e.removeEventListener("error",n)},r=()=>{t(y(e.result)),a()},n=()=>{s(e.error),a()};e.addEventListener("success",r),e.addEventListener("error",n)}));return t.then((t=>{t instanceof IDBCursor&&u.set(t,e)})).catch((()=>{})),p.set(t,e),t}(e);if(d.has(e))return d.get(e);const t=g(e);return t!==e&&(d.set(e,t),p.set(t,e)),t}var b=e=>p.get(e);var w=["get","getKey","getAll","getAllKeys","count"],v=["put","add","delete","clear"],N=new Map;function q(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(N.get(t))return N.get(t);const s=t.replace(/FromIndex$/,""),a=t!==s,r=v.includes(s);if(!(s in(a?IDBIndex:IDBObjectStore).prototype)||!r&&!w.includes(s))return;const n=async function(e,...t){const n=this.transaction(e,r?"readwrite":"readonly");let o=n.store;return a&&(o=o.index(t.shift())),(await Promise.all([o[s](...t),r&&n.done]))[0]};return N.set(t,n),n}f=(e=>({...e,get:(t,s,a)=>q(t,s)||e.get(t,s,a),has:(t,s)=>!!q(t,s)||e.has(t,s)}))(f);try{self["workbox:background-sync:7.0.0"]&&_()}catch(e){}var R="requests",k="queueName",x=["method","referrer","referrerPolicy","mode","credentials","cache","redirect","integrity","keepalive"],E=class e{static async fromRequest(t){const s={url:t.url,headers:{}};"GET"!==t.method&&(s.body=await t.clone().arrayBuffer());for(const[e,a]of t.headers.entries())s.headers[e]=a;for(const e of x)void 0!==t[e]&&(s[e]=t[e]);return new e(s)}constructor(e){o.isType(e,"object",{moduleName:"workbox-background-sync",className:"StorableRequest",funcName:"constructor",paramName:"requestData"}),o.isType(e.url,"string",{moduleName:"workbox-background-sync",className:"StorableRequest",funcName:"constructor",paramName:"requestData.url"}),"navigate"===e.mode&&(e.mode="same-origin"),this._requestData=e}toObject(){const e=Object.assign({},this._requestData);return e.headers=Object.assign({},this._requestData.headers),e.body&&(e.body=e.body.slice(0)),e}toRequest(){return new Request(this._requestData.url,this._requestData)}clone(){return new e(this.toObject())}},$="workbox-background-sync",T=new Set,C=e=>{const t={request:new E(e.requestData).toRequest(),timestamp:e.timestamp};return e.metadata&&(t.metadata=e.metadata),t},L={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},S=e=>[L.prefix,e,L.suffix].filter((e=>e&&e.length>0)).join("-"),U=e=>e||S(L.googleAnalytics),D=e=>e||S(L.precache),P=e=>e||S(L.runtime);try{self["workbox:routing:7.0.0"]&&_()}catch(e){}var I=["DELETE","GET","HEAD","PATCH","POST","PUT"],O=e=>e&&"object"==typeof e?(o.hasMethod(e,"handle",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),e):(o.isType(e,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),{handle:e}),A=class{constructor(e,t,s="GET"){o.isType(e,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"match"}),s&&o.isOneOf(s,I,{paramName:"method"}),this.handler=O(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=O(e)}},j=class{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data;n.debug("Caching URLs from the window",t.urlsToCache);const s=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const s=new Request(...t);return this.handleRequest({request:s,event:e})})));e.waitUntil(s),e.ports&&e.ports[0]&&s.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){o.isInstance(e,Request,{moduleName:"workbox-routing",className:"Router",funcName:"handleRequest",paramName:"options.request"});const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return void n.debug("Workbox Router only supports URLs that start with 'http'.");const a=s.origin===location.origin,{params:r,route:c}=this.findMatchingRoute({event:t,request:e,sameOrigin:a,url:s});let u=c&&c.handler;const l=[];u&&(l.push(["Found a route to handle this request:",c]),r&&l.push(["Passing the following params to the route's handler:",r]));const h=e.method;if(!u&&this._defaultHandlerMap.has(h)&&(l.push(`Failed to find a matching route. Falling back to the default handler for ${h}.`),u=this._defaultHandlerMap.get(h)),!u)return void n.debug(`No route found for: ${i(s)}`);let d;n.groupCollapsed(`Router is responding to: ${i(s)}`),l.forEach((e=>{Array.isArray(e)?n.log(...e):n.log(e)})),n.groupEnd();try{d=u.handle({url:s,request:e,event:t,params:r})}catch(e){d=Promise.reject(e)}const p=c&&c.catchHandler;return d instanceof Promise&&(this._catchHandler||p)&&(d=d.catch((async a=>{if(p){n.groupCollapsed(`Error thrown when responding to:  ${i(s)}. Falling back to route's Catch Handler.`),n.error("Error thrown by:",c),n.error(a),n.groupEnd();try{return await p.handle({url:s,request:e,event:t,params:r})}catch(e){e instanceof Error&&(a=e)}}if(this._catchHandler)return n.groupCollapsed(`Error thrown when responding to:  ${i(s)}. Falling back to global Catch Handler.`),n.error("Error thrown by:",c),n.error(a),n.groupEnd(),this._catchHandler.handle({url:s,request:e,event:t});throw a}))),d}findMatchingRoute({url:e,sameOrigin:t,request:s,event:a}){const r=this._routes.get(s.method)||[];for(const o of r){let r;const c=o.match({url:e,sameOrigin:t,request:s,event:a});if(c)return c instanceof Promise&&n.warn(`While routing ${i(e)}, an async matchCallback function was used. Please convert the following route to use a synchronous matchCallback function:`,o),r=c,(Array.isArray(r)&&0===r.length||c.constructor===Object&&0===Object.keys(c).length||"boolean"==typeof c)&&(r=void 0),{route:o,params:r}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,O(e))}setCatchHandler(e){this._catchHandler=O(e)}registerRoute(e){o.isType(e,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),o.hasMethod(e,"match",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),o.isType(e.handler,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),o.hasMethod(e.handler,"handle",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.handler"}),o.isType(e.method,"string",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.method"}),this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new r("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(!(t>-1))throw new r("unregister-route-route-not-registered");this._routes.get(e.method).splice(t,1)}};try{self["workbox:strategies:7.0.0"]&&_()}catch(e){}var B={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};function K(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}var F=new Set;function W(e){return new Promise((t=>setTimeout(t,e)))}function M(e){return"string"==typeof e?new Request(e):e}var H=class{constructor(e={}){this.cacheName=P(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,c=new class{constructor(e,t){this._cacheKeys={},o.isInstance(t.event,ExtendableEvent,{moduleName:"workbox-strategies",className:"StrategyHandler",funcName:"constructor",paramName:"options.event"}),Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new class{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}},this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let s=M(e);if("navigate"===s.mode&&t instanceof FetchEvent&&t.preloadResponse){const e=await t.preloadResponse;if(e)return n.log(`Using a preloaded navigation response for '${i(s.url)}'`),e}const a=this.hasCallback("fetchDidFail")?s.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))s=await e({request:s.clone(),event:t})}catch(e){if(e instanceof Error)throw new r("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const o=s.clone();try{let e;e=await fetch(s,"navigate"===s.mode?void 0:this._strategy.fetchOptions),n.debug(`Network request for '${i(s.url)}' returned a response with status '${e.status}'.`);for(const s of this.iterateCallbacks("fetchDidSucceed"))e=await s({event:t,request:o,response:e});return e}catch(e){throw n.log(`Network request for '${i(s.url)}' threw an error.`,e),a&&await this.runCallbacks("fetchDidFail",{error:e,event:t,originalRequest:a.clone(),request:o.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=M(e);let s;const{cacheName:a,matchOptions:r}=this._strategy,o=await this.getCacheKey(t,"read"),i=Object.assign(Object.assign({},r),{cacheName:a});s=await caches.match(o,i),s?n.debug(`Found a cached response in '${a}'.`):n.debug(`No cached response found in '${a}'.`);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:r,cachedResponse:s,request:o,event:this.event})||void 0;return s}async cachePut(e,t){const s=M(e);await W(0);const a=await this.getCacheKey(s,"write");{if(a.method&&"GET"!==a.method)throw new r("attempt-to-cache-non-get-request",{url:i(a.url),method:a.method});const e=t.headers.get("Vary");e&&n.debug(`The response for ${i(a.url)} has a 'Vary: ${e}' header. Consider setting the {ignoreVary: true} option on your strategy to ensure cache matching and deletion works as expected.`)}if(!t)throw n.error(`Cannot cache non-existent response for '${i(a.url)}'.`),new r("cache-put-with-no-response",{url:i(a.url)});const o=await this._ensureResponseSafeToCache(t);if(!o)return n.debug(`Response '${i(a.url)}' will not be cached.`,o),!1;const{cacheName:c,matchOptions:u}=this._strategy,l=await self.caches.open(c),h=this.hasCallback("cacheDidUpdate"),d=h?await async function(e,t,s,a){const r=K(t.url,s);if(t.url===r)return e.match(t,a);const n=Object.assign(Object.assign({},a),{ignoreSearch:!0}),o=await e.keys(t,n);for(const t of o)if(r===K(t.url,s))return e.match(t,a)}(l,a.clone(),["__WB_REVISION__"],u):null;n.debug(`Updating the '${c}' cache with a new Response for ${i(a.url)}.`);try{await l.put(a,h?o.clone():o)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){n.log(`About to run ${F.size} callbacks to clean up caches.`);for(const e of F)await e(),n.log(e,"is complete.");n.log("Finished running callbacks.")}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:c,oldResponse:d,newResponse:o.clone(),request:a,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=M(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const r=Object.assign(Object.assign({},a),{state:s});return t[e](r)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||(t&&200!==t.status&&(t=void 0),t&&200!==t.status&&(0===t.status?n.warn(`The response for '${this.request.url}' is an opaque response. The caching strategy that you're using will not cache opaque responses by default.`):n.debug(`The response for '${this.request.url}' returned a status code of '${e.status}' and won't be cached as a result.`))),t}}(this,{event:t,request:s,params:a}),u=this._getResponse(c,s,t);return[u,this._awaitComplete(u,c,s,t)]}async _getResponse(e,t,s){let a;await e.runCallbacks("handlerWillStart",{event:s,request:t});try{if(a=await this._handle(t,e),!a||"error"===a.type)throw new r("no-response",{url:t.url})}catch(r){if(r instanceof Error)for(const n of e.iterateCallbacks("handlerDidError"))if(a=await n({error:r,event:s,request:t}),a)break;if(!a)throw r;n.log(`While responding to '${i(t.url)}', an ${r instanceof Error?r.toString():""} error occurred. Using a fallback response provided by a handlerDidError plugin.`)}for(const r of e.iterateCallbacks("handlerWillRespond"))a=await r({event:s,request:t,response:a});return a}async _awaitComplete(e,t,s,a){let r,n;try{r=await e}catch(e){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:r}),await t.doneWaiting()}catch(e){e instanceof Error&&(n=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:r,error:n}),t.destroy(),n)throw n}},V=(e,t)=>`Using ${e} to respond to '${i(t.url)}'`,Q=e=>{e&&(n.groupCollapsed("View the final response here."),n.log(e||"[No response returned]"),n.groupEnd())},G=class extends H{constructor(e={}){super(e),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift(B),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0,this._networkTimeoutSeconds&&o.isType(this._networkTimeoutSeconds,"number",{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"constructor",paramName:"networkTimeoutSeconds"})}async _handle(e,t){const s=[];o.isInstance(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"handle",paramName:"makeRequest"});const a=[];let i;if(this._networkTimeoutSeconds){const{id:r,promise:n}=this._getTimeoutPromise({request:e,logs:s,handler:t});i=r,a.push(n)}const c=this._getNetworkPromise({timeoutId:i,request:e,logs:s,handler:t});a.push(c);const u=await t.waitUntil((async()=>await t.waitUntil(Promise.race(a))||await c)());n.groupCollapsed(V(this.constructor.name,e));for(const e of s)n.log(e);if(Q(u),n.groupEnd(),!u)throw new r("no-response",{url:e.url});return u}_getTimeoutPromise({request:e,logs:t,handler:s}){let a;return{promise:new Promise((r=>{a=setTimeout((async()=>{t.push(`Timing out the network response at ${this._networkTimeoutSeconds} seconds.`),r(await s.cacheMatch(e))}),1e3*this._networkTimeoutSeconds)})),id:a}}async _getNetworkPromise({timeoutId:e,request:t,logs:s,handler:a}){let r,n;try{n=await a.fetchAndCachePut(t)}catch(e){e instanceof Error&&(r=e)}return e&&clearTimeout(e),n?s.push("Got response from network."):s.push("Unable to get a response from the network. Will respond with a cached response."),!r&&n||(n=await a.cacheMatch(t),n?s.push(`Found a cached response in the '${this.cacheName}' cache.`):s.push(`No response found in the '${this.cacheName}' cache.`)),n}},z=class extends H{constructor(e={}){super(e),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){let s,a;o.isInstance(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"_handle",paramName:"request"});try{const s=[t.fetch(e)];if(this._networkTimeoutSeconds){const e=W(1e3*this._networkTimeoutSeconds);s.push(e)}if(a=await Promise.race(s),!a)throw new Error(`Timed out the network response after ${this._networkTimeoutSeconds} seconds.`)}catch(e){e instanceof Error&&(s=e)}if(n.groupCollapsed(V(this.constructor.name,e)),a?n.log("Got response from network."):n.log("Unable to get a response from the network."),Q(a),n.groupEnd(),!a)throw new r("no-response",{url:e.url,error:s});return a}};try{self["workbox:google-analytics:7.0.0"]&&_()}catch(e){}var Y="www.google-analytics.com",J="www.googletagmanager.com",X=/^\/(\w+\/)?collect/,Z=e=>{const t=({url:e})=>e.hostname===Y&&X.test(e.pathname),s=new z({plugins:[e]});return[new A(t,s,"GET"),new A(t,s,"POST")]},ee=e=>{const t=new G({cacheName:e});return new A((({url:e})=>e.hostname===Y&&"/analytics.js"===e.pathname),t,"GET")},te=e=>{const t=new G({cacheName:e});return new A((({url:e})=>e.hostname===J&&"/gtag/js"===e.pathname),t,"GET")},se=e=>{const t=new G({cacheName:e});return new A((({url:e})=>e.hostname===J&&"/gtm.js"===e.pathname),t,"GET")};function ae(e,t){const s=t();return e.waitUntil(s),s}try{self["workbox:precaching:7.0.0"]&&_()}catch(e){}function re(e){if(!e)throw new r("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:s}=e;if(!s)throw new r("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(s,location.href);return{cacheKey:e.href,url:e.href}}const a=new URL(s,location.href),n=new URL(s,location.href);return a.searchParams.set("__WB_REVISION__",t),{cacheKey:a.href,url:n.href}}var ne,oe=class{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}};function ie(e){const t=e.length;t>0&&(n.groupCollapsed(`During precaching cleanup, ${t} cached request${1===t?" was":"s were"} deleted.`),((e,t)=>{n.groupCollapsed(e);for(const e of t)n.log(e);n.groupEnd()})("Deleted Cache Requests",e),n.groupEnd())}function ce(e,t){if(0!==t.length){n.groupCollapsed(e);for(const e of t)n.log(e);n.groupEnd()}}async function ue(e,t){let s=null;if(e.url){s=new URL(e.url).origin}if(s!==self.location.origin)throw new r("cross-origin-copy-response",{origin:s});const a=e.clone(),n={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},o=t?t(n):n,i=function(){if(void 0===ne){const e=new Response("");if("body"in e)try{new Response(e.body),ne=!0}catch(e){ne=!1}ne=!1}return ne}()?a.body:await a.blob();return new Response(i,o)}var le=class e extends H{constructor(t={}){t.cacheName=D(t.cacheName),super(t),this._fallbackToNetwork=!1!==t.fallbackToNetwork,this.plugins.push(e.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let s;const a=t.params||{};if(!this._fallbackToNetwork)throw new r("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{n.warn(`The precached response for ${i(e.url)} in ${this.cacheName} was not found. Falling back to the network.`);const r=a.integrity,o=e.integrity,c=!o||o===r;if(s=await t.fetch(new Request(e,{integrity:"no-cors"!==e.mode?o||r:void 0})),r&&c&&"no-cors"!==e.mode){this._useDefaultCacheabilityPluginIfNeeded();await t.cachePut(e,s.clone())&&n.log(`A response for ${i(e.url)} was used to "repair" the precache.`)}}{const r=a.cacheKey||await t.getCacheKey(e,"read");n.groupCollapsed("Precaching is responding to: "+i(e.url)),n.log(`Serving the precached url: ${i(r instanceof Request?r.url:r)}`),n.groupCollapsed("View request details here."),n.log(e),n.groupEnd(),n.groupCollapsed("View response details here."),n.log(s),n.groupEnd(),n.groupEnd()}return s}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const s=await t.fetch(e);if(!await t.cachePut(e,s.clone()))throw new r("bad-precaching-response",{url:e.url,status:s.status});return s}_useDefaultCacheabilityPluginIfNeeded(){let t=null,s=0;for(const[a,r]of this.plugins.entries())r!==e.copyRedirectedCacheableResponsesPlugin&&(r===e.defaultPrecacheCacheabilityPlugin&&(t=a),r.cacheWillUpdate&&s++);0===s?this.plugins.push(e.defaultPrecacheCacheabilityPlugin):s>1&&null!==t&&this.plugins.splice(t,1)}};le.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},le.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await ue(e):e};var he,de=class extends A{constructor(e,t,s){o.isInstance(e,RegExp,{moduleName:"workbox-routing",className:"RegExpRoute",funcName:"constructor",paramName:"pattern"});super((({url:t})=>{const s=e.exec(t.href);if(s){if(t.origin===location.origin||0===s.index)return s.slice(1);n.debug(`The regular expression '${e.toString()}' only partially matched against the cross-origin URL '${t.toString()}'. RegExpRoute's will only handle cross-origin requests if they match the entire URL.`)}}),t,s)}},pe=()=>(he||((he=new j).addFetchListener(),he.addCacheListener()),he);function fe(e,t,s){let a;if("string"==typeof e){const o=new URL(e,location.href);{if(!e.startsWith("/")&&!e.startsWith("http"))throw new r("invalid-string",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});const t=e.startsWith("http")?o.pathname:e,s="[*:?+]";new RegExp(`${s}`).exec(t)&&n.debug(`The '$capture' parameter contains an Express-style wildcard character (${s}). Strings are now always interpreted as exact matches; use a RegExp for partial or wildcard matches.`)}a=new A((({url:t})=>(t.pathname===o.pathname&&t.origin!==o.origin&&n.debug(`${e} only partially matches the cross-origin URL ${t.toString()}. This route will only handle cross-origin requests if they match the entire URL.`),t.href===o.href)),t,s)}else if(e instanceof RegExp)a=new de(e,t,s);else if("function"==typeof e)a=new A(e,t,s);else{if(!(e instanceof A))throw new r("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=e}return pe().registerRoute(a),a}((e={})=>{const t=U(e.cacheName),s=new class{constructor(e,t){this.fetchDidFail=async({request:e})=>{await this._queue.pushRequest({request:e})},this._queue=new class{constructor(e,{forceSyncFallback:t,onSync:s,maxRetentionTime:a}={}){if(this._syncInProgress=!1,this._requestsAddedDuringSync=!1,T.has(e))throw new r("duplicate-queue-name",{name:e});T.add(e),this._name=e,this._onSync=s||this.replayRequests,this._maxRetentionTime=a||10080,this._forceSyncFallback=Boolean(t),this._queueStore=new class{constructor(e){this._queueName=e,this._queueDb=new class{constructor(){this._db=null}async addEntry(e){const t=(await this.getDb()).transaction(R,"readwrite",{durability:"relaxed"});await t.store.add(e),await t.done}async getFirstEntryId(){const e=await this.getDb(),t=await e.transaction(R).store.openCursor();return null==t?void 0:t.value.id}async getAllEntriesByQueueName(e){const t=await this.getDb();return await t.getAllFromIndex(R,k,IDBKeyRange.only(e))||new Array}async getEntryCountByQueueName(e){return(await this.getDb()).countFromIndex(R,k,IDBKeyRange.only(e))}async deleteEntry(e){const t=await this.getDb();await t.delete(R,e)}async getFirstEntryByQueueName(e){return await this.getEndEntryFromIndex(IDBKeyRange.only(e),"next")}async getLastEntryByQueueName(e){return await this.getEndEntryFromIndex(IDBKeyRange.only(e),"prev")}async getEndEntryFromIndex(e,t){const s=await this.getDb(),a=await s.transaction(R).store.index(k).openCursor(e,t);return null==a?void 0:a.value}async getDb(){return this._db||(this._db=await function(e,t,{blocked:s,upgrade:a,blocking:r,terminated:n}={}){const o=indexedDB.open(e,t),i=y(o);return a&&o.addEventListener("upgradeneeded",(e=>{a(y(o.result),e.oldVersion,e.newVersion,y(o.transaction),e)})),s&&o.addEventListener("blocked",(e=>s(e.oldVersion,e.newVersion,e))),i.then((e=>{n&&e.addEventListener("close",(()=>n())),r&&e.addEventListener("versionchange",(e=>r(e.oldVersion,e.newVersion,e)))})).catch((()=>{})),i}("workbox-background-sync",3,{upgrade:this._upgradeDb})),this._db}_upgradeDb(e,t){t>0&&t<3&&e.objectStoreNames.contains(R)&&e.deleteObjectStore(R),e.createObjectStore(R,{autoIncrement:!0,keyPath:"id"}).createIndex(k,k,{unique:!1})}}}async pushEntry(e){o.isType(e,"object",{moduleName:"workbox-background-sync",className:"QueueStore",funcName:"pushEntry",paramName:"entry"}),o.isType(e.requestData,"object",{moduleName:"workbox-background-sync",className:"QueueStore",funcName:"pushEntry",paramName:"entry.requestData"}),delete e.id,e.queueName=this._queueName,await this._queueDb.addEntry(e)}async unshiftEntry(e){o.isType(e,"object",{moduleName:"workbox-background-sync",className:"QueueStore",funcName:"unshiftEntry",paramName:"entry"}),o.isType(e.requestData,"object",{moduleName:"workbox-background-sync",className:"QueueStore",funcName:"unshiftEntry",paramName:"entry.requestData"});const t=await this._queueDb.getFirstEntryId();t?e.id=t-1:delete e.id,e.queueName=this._queueName,await this._queueDb.addEntry(e)}async popEntry(){return this._removeEntry(await this._queueDb.getLastEntryByQueueName(this._queueName))}async shiftEntry(){return this._removeEntry(await this._queueDb.getFirstEntryByQueueName(this._queueName))}async getAll(){return await this._queueDb.getAllEntriesByQueueName(this._queueName)}async size(){return await this._queueDb.getEntryCountByQueueName(this._queueName)}async deleteEntry(e){await this._queueDb.deleteEntry(e)}async _removeEntry(e){return e&&await this.deleteEntry(e.id),e}}(this._name),this._addSyncListener()}get name(){return this._name}async pushRequest(e){o.isType(e,"object",{moduleName:"workbox-background-sync",className:"Queue",funcName:"pushRequest",paramName:"entry"}),o.isInstance(e.request,Request,{moduleName:"workbox-background-sync",className:"Queue",funcName:"pushRequest",paramName:"entry.request"}),await this._addRequest(e,"push")}async unshiftRequest(e){o.isType(e,"object",{moduleName:"workbox-background-sync",className:"Queue",funcName:"unshiftRequest",paramName:"entry"}),o.isInstance(e.request,Request,{moduleName:"workbox-background-sync",className:"Queue",funcName:"unshiftRequest",paramName:"entry.request"}),await this._addRequest(e,"unshift")}async popRequest(){return this._removeRequest("pop")}async shiftRequest(){return this._removeRequest("shift")}async getAll(){const e=await this._queueStore.getAll(),t=Date.now(),s=[];for(const a of e){const e=60*this._maxRetentionTime*1e3;t-a.timestamp>e?await this._queueStore.deleteEntry(a.id):s.push(C(a))}return s}async size(){return await this._queueStore.size()}async _addRequest({request:e,metadata:t,timestamp:s=Date.now()},a){const r={requestData:(await E.fromRequest(e.clone())).toObject(),timestamp:s};switch(t&&(r.metadata=t),a){case"push":await this._queueStore.pushEntry(r);break;case"unshift":await this._queueStore.unshiftEntry(r)}n.log(`Request for '${i(e.url)}' has been added to background sync queue '${this._name}'.`),this._syncInProgress?this._requestsAddedDuringSync=!0:await this.registerSync()}async _removeRequest(e){const t=Date.now();let s;switch(e){case"pop":s=await this._queueStore.popEntry();break;case"shift":s=await this._queueStore.shiftEntry()}if(s){const a=60*this._maxRetentionTime*1e3;return t-s.timestamp>a?this._removeRequest(e):C(s)}}async replayRequests(){let e;for(;e=await this.shiftRequest();)try{await fetch(e.request.clone()),n.log(`Request for '${i(e.request.url)}' has been replayed in queue '${this._name}'`)}catch(t){throw await this.unshiftRequest(e),n.log(`Request for '${i(e.request.url)}' failed to replay, putting it back in queue '${this._name}'`),new r("queue-replay-failed",{name:this._name})}n.log(`All requests in queue '${this.name}' have successfully replayed; the queue is now empty!`)}async registerSync(){if("sync"in self.registration&&!this._forceSyncFallback)try{await self.registration.sync.register(`${$}:${this._name}`)}catch(e){n.warn(`Unable to register sync event for '${this._name}'.`,e)}}_addSyncListener(){"sync"in self.registration&&!this._forceSyncFallback?self.addEventListener("sync",(e=>{if(e.tag===`${$}:${this._name}`){n.log(`Background sync for tag '${e.tag}' has been received`);const t=async()=>{let t;this._syncInProgress=!0;try{await this._onSync({queue:this})}catch(e){if(e instanceof Error)throw t=e,t}finally{!this._requestsAddedDuringSync||t&&!e.lastChance||await this.registerSync(),this._syncInProgress=!1,this._requestsAddedDuringSync=!1}};e.waitUntil(t())}})):(n.log("Background sync replaying without background sync event"),this._onSync({queue:this}))}static get _queueNames(){return T}}(e,t)}}("workbox-google-analytics",{maxRetentionTime:2880,onSync:(a=e,async({queue:e})=>{let t;for(;t=await e.shiftRequest();){const{request:s,timestamp:r}=t,o=new URL(s.url);try{const e="POST"===s.method?new URLSearchParams(await s.clone().text()):o.searchParams,t=r-(Number(e.get("qt"))||0),c=Date.now()-t;if(e.set("qt",String(c)),a.parameterOverrides)for(const t of Object.keys(a.parameterOverrides)){const s=a.parameterOverrides[t];e.set(t,s)}"function"==typeof a.hitFilter&&a.hitFilter.call(null,e),await fetch(new Request(o.origin+o.pathname,{body:e.toString(),method:"POST",mode:"cors",credentials:"omit",headers:{"Content-Type":"text/plain"}})),n.log(`Request for '${i(o.href)}' has been replayed`)}catch(s){throw await e.unshiftRequest(t),n.log(`Request for '${i(o.href)}' failed to replay, putting it back in the queue.`),s}}n.log("All Google Analytics request successfully replayed; the queue is now empty!")})});var a;const c=[se(t),ee(t),te(t),...Z(s)],u=new j;for(const e of c)u.registerRoute(e);u.addFetchListener()})();var me,ge=new class extends H{constructor(e={}){super(e),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift(B)}async _handle(e,t){const s=[];o.isInstance(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"handle",paramName:"request"});const a=t.fetchAndCachePut(e).catch((()=>{}));t.waitUntil(a);let i,c=await t.cacheMatch(e);if(c)s.push(`Found a cached response in the '${this.cacheName}' cache. Will update with the network response in the background.`);else{s.push(`No response found in the '${this.cacheName}' cache. Will wait for the network response.`);try{c=await a}catch(e){e instanceof Error&&(i=e)}}n.groupCollapsed(V(this.constructor.name,e));for(const e of s)n.log(e);if(Q(c),n.groupEnd(),!c)throw new r("no-response",{url:e.url,error:i});return c}}({cacheName:"assets"});me=ge,pe().setDefaultHandler(me);var ye=new class{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new le({cacheName:D(e),plugins:[...t,new oe({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){o.isArray(e,{moduleName:"workbox-precaching",className:"PrecacheController",funcName:"addToCacheList",paramName:"entries"});const t=[];for(const s of e){"string"==typeof s?t.push(s):s&&void 0===s.revision&&t.push(s.url);const{cacheKey:e,url:a}=re(s),o="string"!=typeof s&&s.revision?"reload":"default";if(this._urlsToCacheKeys.has(a)&&this._urlsToCacheKeys.get(a)!==e)throw new r("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(a),secondEntry:e});if("string"!=typeof s&&s.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==s.integrity)throw new r("add-to-cache-list-conflicting-integrities",{url:a});this._cacheKeysToIntegrities.set(e,s.integrity)}if(this._urlsToCacheKeys.set(a,e),this._urlsToCacheModes.set(a,o),t.length>0){const e=`Workbox is precaching URLs without revision info: ${t.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;n.warn(e)}}}install(e){return ae(e,(async()=>{const t=new class{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}};this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),r=this._urlsToCacheModes.get(t),n=new Request(t,{integrity:a,cache:r,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:n,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return function(e,t){const s=e.length,a=t.length;if(s||a){let r=`Precaching ${s} file${1===s?"":"s"}.`;a>0&&(r+=` ${a} file${1===a?" is":"s are"} already cached.`),n.groupCollapsed(r),ce("View newly precached URLs.",e),ce("View previously precached URLs.",t),n.groupEnd()}}(s,a),{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return ae(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const r of t)s.has(r.url)||(await e.delete(r),a.push(r.url));return ie(a),{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new r("non-precached-url",{url:e});return s=>(s.request=new Request(e),s.params=Object.assign({cacheKey:t},s.params),this.strategy.handle(s))}}({cacheName:"assets"});ye.addToCacheList([{url:"api/index.html",revision:"c68d1d6db39740f325eea2834b9dd4b1"},{url:"gen/index.html",revision:"349c35459cf76760c491fde7b5299347"},{url:"img/index.html",revision:"b27651284ebe96d40cabec51df520c7f"},{url:"index.html",revision:"f9e1ebbe9ce2ecff0a1265538423c822"},{url:"api/api.js",revision:"cbdaf7329dba49a9f8d7f12ff4eb1070"},{url:"gen/gen.js",revision:"852c448d06ef2d6edaadc084a544c1c4"},{url:"main.js",revision:"5c396984f0b544d6659fbc4a014e34fb"},{url:"modules/chess.js",revision:"5cbb6c820aee23113f7b2dc1dd45c14f"},{url:"modules/ptt.js",revision:"4edf5faa588eab503d23fbcc5710c9da"},{url:"modules/py.js",revision:"d75e3fb73eeaade86ba34eddfde577a6"},{url:"sdk.js",revision:"70a1d6a305821d6305eb716ba22f9bc5"},{url:"lib/css/all.min.css",revision:"aa710b3c14de0bc270385f560f0d772a"},{url:"style.css",revision:"9f038c971d34d3270b8be70b53b299c9"},{url:"lib/webfonts/fa-solid-900.woff2",revision:"1fbba778ec8fdc7550433f2252b5e559"},{url:"assets/1echecs26.png",revision:"dbc726b96d91b97b2ad53b3ccb8a9e48"},{url:"assets/1echecs32.png",revision:"d9e72216e59873e0d55579ae5c82a889"},{url:"assets/1echecs38.png",revision:"844f49c70b8100c37c24f4222ca5fc89"},{url:"assets/1echecs44.png",revision:"bf81efdbdabf9b270870f425663c8cb0"},{url:"assets/alpha26.png",revision:"305a3d24372ce80575d4fca38b69a471"},{url:"assets/alpha32.png",revision:"ffea054c8fa673d703d0a29e3a822e56"},{url:"assets/alpha38.png",revision:"64c51f078b8ec59bfa4f272b124d98db"},{url:"assets/alpha44.png",revision:"8c0972bd4b0bef531bf7c7f8ed0d1849"},{url:"assets/goodCompanion26.png",revision:"a840624ce5087697dc4345825f903bd2"},{url:"assets/goodCompanion32.png",revision:"437c4c9b067e6f766bc9fc478deba8a5"},{url:"assets/goodCompanion38.png",revision:"5dbf6ca68583149705bbffb5ebe35715"},{url:"assets/goodCompanion44.png",revision:"25e9ad45edf2c8266ed6f5465769767f"},{url:"assets/kilfiger26.png",revision:"b73296336c463726ed7d013fd15c3b21"},{url:"assets/kilfiger32.png",revision:"8526d7037659113b061ee2fe207bbcf8"},{url:"assets/kilfiger38.png",revision:"85440a3c9a0d3f1776a9488b6ab9db1a"},{url:"assets/kilfiger44.png",revision:"1183967ce8f0ce59dc121ce67e8800da"},{url:"assets/merida26.png",revision:"9c0f351be0692bdab30bc1cbb10656c9"},{url:"assets/merida32.png",revision:"a5468ff522278830ded245b7972d8dd7"},{url:"assets/merida38.png",revision:"a4b31c981e83bce5788b97b8c6f3a0a7"},{url:"assets/merida44.png",revision:"9f20ee53f583731b252446b29aee52b3"},{url:"assets/mpchess26.png",revision:"ffd7b4dbdf00350e170b928500dd2815"},{url:"assets/mpchess32.png",revision:"9eac902f04bbcb51b51701beb4e2566f"},{url:"assets/mpchess38.png",revision:"507c558bf87ecd7e1a2887ba404d10c0"},{url:"assets/mpchess44.png",revision:"36d142e3c3c02e09e415fc25e5d9e222"},{url:"assets/skak26.png",revision:"156fb345312da6c5b9863bf39a5aeadd"},{url:"assets/skak32.png",revision:"0be270a8dbb7edfb0dcfc2c15c2f9d6e"},{url:"assets/skak38.png",revision:"2f86d757996dcd31513b340dea5925b5"},{url:"assets/skak44.png",revision:"a44c2e0b8a4677adab1672a0a55302bb"},{url:"assets/symbol26.png",revision:"7e5cd5d03872dcd810d97bf5486a42d0"},{url:"assets/symbol32.png",revision:"99bbb4b4c4b3c4acc2a5067fadce6bd7"},{url:"assets/symbol38.png",revision:"d7e6dccecdf3375aa45e9a7ca24cb366"},{url:"assets/symbol44.png",revision:"867a1da1287229183429867344baa2df"},{url:"assets/x2/1echecs26.png",revision:"a5fabb7c50aae21a5f397546cdcdb93a"},{url:"assets/x2/1echecs32.png",revision:"288907ac1def6de59512bff2d83d88e4"},{url:"assets/x2/1echecs38.png",revision:"42dd13f0fac5baa3942f3571cd591a8b"},{url:"assets/x2/1echecs44.png",revision:"281408a0bd075bf5bbd6f43ee83f2ea6"},{url:"assets/x2/alpha26.png",revision:"7f2627379329b0b5bf91721d4ffe0095"},{url:"assets/x2/alpha32.png",revision:"ebae3b60ca0ba71775efb1520c524298"},{url:"assets/x2/alpha38.png",revision:"8a9c75ddc2adadfb7d1c3d505b95d726"},{url:"assets/x2/alpha44.png",revision:"4cb36808e4b1417c3386d67c2f46bf49"},{url:"assets/x2/goodCompanion26.png",revision:"eb64eb7fd4a3fb6e3c8b79f6eff145ac"},{url:"assets/x2/goodCompanion32.png",revision:"572508a70a2dd03b1f7e8a086dbd5a65"},{url:"assets/x2/goodCompanion38.png",revision:"aa0df3d0faebf5dd11eeeac4a9a9233f"},{url:"assets/x2/goodCompanion44.png",revision:"9c125a249a94e63219d7c26c2eba8c4b"},{url:"assets/x2/kilfiger26.png",revision:"a175614d69859504d16d1b3e0afff776"},{url:"assets/x2/kilfiger32.png",revision:"c24a1775683e5d7fbf90df9faa61ea32"},{url:"assets/x2/kilfiger38.png",revision:"2fa8e442e403477544ea5d6ab2baf0cc"},{url:"assets/x2/kilfiger44.png",revision:"2cabcc4671c95c6d0ada8c4787f42f2d"},{url:"assets/x2/merida26.png",revision:"76e8cc5f2482cec2721827b09770d64b"},{url:"assets/x2/merida32.png",revision:"3cddde4acdadbdd200e61cb3833c7f46"},{url:"assets/x2/merida38.png",revision:"63074205f53952fc9315e4e97ff8affd"},{url:"assets/x2/merida44.png",revision:"9c497b6e71e80cb1aea21693bf556f80"},{url:"assets/x2/mpchess26.png",revision:"75fd71198dec22ebc35f7198cc5ccb76"},{url:"assets/x2/mpchess32.png",revision:"a97902b2336b674e26aa2853d74120e1"},{url:"assets/x2/mpchess38.png",revision:"7667a80931b8e77f54fa80df01e02842"},{url:"assets/x2/mpchess44.png",revision:"035f6705eaf6d64bc8a67be8af465b0e"},{url:"assets/x2/skak26.png",revision:"89c581224760b0faed30adb5e25318d7"},{url:"assets/x2/skak32.png",revision:"b0dea80d7b352f45e3b3ad3b17e6bc5d"},{url:"assets/x2/skak38.png",revision:"ca6333a93bcab10d67bfeb4547035c5d"},{url:"assets/x2/skak44.png",revision:"95def9316c7d809a82debd98c9a477ae"},{url:"assets/x2/symbol26.png",revision:"de7aa92bcc0737415c84cb4273d679cc"},{url:"assets/x2/symbol32.png",revision:"2c3ff9dcd69fafcd6e094e6f784bdfbb"},{url:"assets/x2/symbol38.png",revision:"a520de5ed63d9700c0563041b5668715"},{url:"assets/x2/symbol44.png",revision:"0f19a3d849ba92e9dfcebd8df7d1c856"}]),fe(new class extends A{constructor(e,t){super((({request:s})=>{const a=e.getURLsToCacheKeys();for(const r of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:a=!0,urlManipulation:r}={}){const n=new URL(e,location.href);n.hash="",yield n.href;const o=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some((e=>e.test(s)))&&e.searchParams.delete(s);return e}(n,t);if(yield o.href,s&&o.pathname.endsWith("/")){const e=new URL(o.href);e.pathname+=s,yield e.href}if(a){const e=new URL(o.href);e.pathname+=".html",yield e.href}if(r){const e=r({url:n});for(const t of e)yield t.href}}(s.url,t)){const t=a.get(r);if(t){return{cacheKey:t,integrity:e.getIntegrityForCacheKey(t)}}}n.debug("Precaching did not find a match for "+i(s.url))}),e.strategy)}}(ye,{ignoreURLParametersMatching:[/.*/],cleanURLs:!1})),fe((({url:e})=>"mutsuntsai.github.io"!=e.host),new z({fetchOptions:{cache:"reload"}})),self.addEventListener("install",(e=>{self.skipWaiting(),console.log("service worker installing"),ye.install(e)})),self.addEventListener("activate",(e=>{ye.activate(e)}))})();