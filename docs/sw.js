(()=>{try{self["workbox:core:7.0.0"]&&_()}catch(e){}var e={"invalid-value":({paramName:e,validValueDescription:t,value:a})=>{if(!e||!t)throw new Error("Unexpected input to 'invalid-value' error.");return"The '".concat(e,"' parameter was given a value with an ")+"unexpected value. ".concat(t," Received a value of ")+"".concat(JSON.stringify(a),".")},"not-an-array":({moduleName:e,className:t,funcName:a,paramName:s})=>{if(!(e&&t&&a&&s))throw new Error("Unexpected input to 'not-an-array' error.");return"The parameter '".concat(s,"' passed into ")+"'".concat(e,".").concat(t,".").concat(a,"()' must be an array.")},"incorrect-type":({expectedType:e,paramName:t,moduleName:a,className:s,funcName:r})=>{if(!(e&&t&&a&&r))throw new Error("Unexpected input to 'incorrect-type' error.");const n=s?"".concat(s,"."):"";return"The parameter '".concat(t,"' passed into ")+"'".concat(a,".").concat(n)+"".concat(r,"()' must be of type ").concat(e,".")},"incorrect-class":({expectedClassName:e,paramName:t,moduleName:a,className:s,funcName:r,isReturnValueProblem:n})=>{if(!e||!a||!r)throw new Error("Unexpected input to 'incorrect-class' error.");const o=s?"".concat(s,"."):"";return n?"The return value from "+"'".concat(a,".").concat(o).concat(r,"()' ")+"must be an instance of class ".concat(e,"."):"The parameter '".concat(t,"' passed into ")+"'".concat(a,".").concat(o).concat(r,"()' ")+"must be an instance of class ".concat(e,".")},"missing-a-method":({expectedMethod:e,paramName:t,moduleName:a,className:s,funcName:r})=>{if(!(e&&t&&a&&s&&r))throw new Error("Unexpected input to 'missing-a-method' error.");return"".concat(a,".").concat(s,".").concat(r,"() expected the ")+"'".concat(t,"' parameter to expose a '").concat(e,"' method.")},"add-to-cache-list-unexpected-type":({entry:e})=>"An unexpected entry was passed to 'workbox-precaching.PrecacheController.addToCacheList()' The entry "+"'".concat(JSON.stringify(e),"' isn't supported. You must supply an array of ")+"strings with one or more characters, objects with a url property or Request objects.","add-to-cache-list-conflicting-entries":({firstEntry:e,secondEntry:t})=>{if(!e||!t)throw new Error("Unexpected input to 'add-to-cache-list-duplicate-entries' error.");return"Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL "+"".concat(e," but different revision details. Workbox is ")+"unable to cache and version the asset correctly. Please remove one of the entries."},"plugin-error-request-will-fetch":({thrownErrorMessage:e})=>{if(!e)throw new Error("Unexpected input to 'plugin-error-request-will-fetch', error.");return"An error was thrown by a plugins 'requestWillFetch()' method. "+"The thrown error message was: '".concat(e,"'.")},"invalid-cache-name":({cacheNameId:e,value:t})=>{if(!e)throw new Error("Expected a 'cacheNameId' for error 'invalid-cache-name'");return"You must provide a name containing at least one character for "+"setCacheDetails({".concat(e,": '...'}). Received a value of ")+"'".concat(JSON.stringify(t),"'")},"unregister-route-but-not-found-with-method":({method:e})=>{if(!e)throw new Error("Unexpected input to 'unregister-route-but-not-found-with-method' error.");return"The route you're trying to unregister was not  previously "+"registered for the method type '".concat(e,"'.")},"unregister-route-route-not-registered":()=>"The route you're trying to unregister was not previously registered.","queue-replay-failed":({name:e})=>"Replaying the background sync queue '".concat(e,"' failed."),"duplicate-queue-name":({name:e})=>"The Queue name '".concat(e,"' is already being used. ")+"All instances of backgroundSync.Queue must be given unique names.","expired-test-without-max-age":({methodName:e,paramName:t})=>"The '".concat(e,"()' method can only be used when the ")+"'".concat(t,"' is used in the constructor."),"unsupported-route-type":({moduleName:e,className:t,funcName:a,paramName:s})=>"The supplied '".concat(s,"' parameter was an unsupported type. ")+"Please check the docs for ".concat(e,".").concat(t,".").concat(a," for ")+"valid input types.","not-array-of-class":({value:e,expectedClass:t,moduleName:a,className:s,funcName:r,paramName:n})=>"The supplied '".concat(n,"' parameter must be an array of ")+"'".concat(t,"' objects. Received '").concat(JSON.stringify(e),",'. ")+"Please check the call to ".concat(a,".").concat(s,".").concat(r,"() ")+"to fix the issue.","max-entries-or-age-required":({moduleName:e,className:t,funcName:a})=>"You must define either config.maxEntries or config.maxAgeSeconds"+"in ".concat(e,".").concat(t,".").concat(a),"statuses-or-headers-required":({moduleName:e,className:t,funcName:a})=>"You must define either config.statuses or config.headers"+"in ".concat(e,".").concat(t,".").concat(a),"invalid-string":({moduleName:e,funcName:t,paramName:a})=>{if(!a||!e||!t)throw new Error("Unexpected input to 'invalid-string' error.");return"When using strings, the '".concat(a,"' parameter must start with ")+"'http' (for cross-origin matches) or '/' (for same-origin matches). "+"Please see the docs for ".concat(e,".").concat(t,"() for ")+"more info."},"channel-name-required":()=>"You must provide a channelName to construct a BroadcastCacheUpdate instance.","invalid-responses-are-same-args":()=>"The arguments passed into responsesAreSame() appear to be invalid. Please ensure valid Responses are used.","expire-custom-caches-only":()=>"You must provide a 'cacheName' property when using the expiration plugin with a runtime caching strategy.","unit-must-be-bytes":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'unit-must-be-bytes' error.");return"The 'unit' portion of the Range header must be set to 'bytes'. "+'The Range header provided was "'.concat(e,'"')},"single-range-only":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'single-range-only' error.");return"Multiple ranges are not supported. Please use a  single start value, and optional end value. The Range header provided was "+'"'.concat(e,'"')},"invalid-range-values":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'invalid-range-values' error.");return"The Range header is missing both start and end values. At least one of those values is needed. The Range header provided was "+'"'.concat(e,'"')},"no-range-header":()=>"No Range header was found in the Request provided.","range-not-satisfiable":({size:e,start:t,end:a})=>"The start (".concat(t,") and end (").concat(a,") values in the Range are ")+"not satisfiable by the cached response, which is ".concat(e," bytes."),"attempt-to-cache-non-get-request":({url:e,method:t})=>"Unable to cache '".concat(e,"' because it is a '").concat(t,"' request and ")+"only 'GET' requests can be cached.","cache-put-with-no-response":({url:e})=>"There was an attempt to cache '".concat(e,"' but the response was not ")+"defined.","no-response":({url:e,error:t})=>{let a="The strategy could not generate a response for '".concat(e,"'.");return t&&(a+=" The underlying error is ".concat(t,".")),a},"bad-precaching-response":({url:e,status:t})=>"The precaching request for '".concat(e,"' failed")+(t?" with an HTTP status of ".concat(t,"."):"."),"non-precached-url":({url:e})=>"createHandlerBoundToURL('".concat(e,"') was called, but that URL is ")+"not precached. Please pass in a URL that is precached instead.","add-to-cache-list-conflicting-integrities":({url:e})=>"Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL "+"".concat(e," with different integrity values. Please remove one of them."),"missing-precache-entry":({cacheName:e,url:t})=>"Unable to find a precached response in ".concat(e," for ").concat(t,"."),"cross-origin-copy-response":({origin:e})=>"workbox-core.copyResponse() can only be used with same-origin "+"responses. It was passed a response with origin ".concat(e,"."),"opaque-streams-source":({type:e})=>{const t="One of the workbox-streams sources resulted in an "+"'".concat(e,"' response.");return"opaqueredirect"===e?"".concat(t," Please do not use a navigation request that results ")+"in a redirect as a source.":"".concat(t," Please ensure your sources are CORS-enabled.")}},t=(t,a={})=>{const s=e[t];if(!s)throw new Error("Unable to find message for code '".concat(t,"'."));return s(a)},a=class extends Error{constructor(e,a){super(t(e,a)),this.name=e,this.details=a}},s={hasMethod:(e,t,s)=>{if("function"!==typeof e[t])throw s.expectedMethod=t,new a("missing-a-method",s)},isArray:(e,t)=>{if(!Array.isArray(e))throw new a("not-an-array",t)},isInstance:(e,t,s)=>{if(!(e instanceof t))throw s.expectedClassName=t.name,new a("incorrect-class",s)},isOneOf:(e,t,s)=>{if(!t.includes(e))throw s.validValueDescription="Valid values are ".concat(JSON.stringify(t),"."),new a("invalid-value",s)},isType:(e,t,s)=>{if(typeof e!==t)throw s.expectedType=t,new a("incorrect-type",s)},isArrayOfClass:(e,t,s)=>{const r=new a("not-array-of-class",s);if(!Array.isArray(e))throw r;for(const a of e)if(!(a instanceof t))throw r}},r={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[r.prefix,e,r.suffix].filter((e=>e&&e.length>0)).join("-"),o=e=>e||n(r.precache),c=e=>e||n(r.runtime),i=(()=>{"__WB_DISABLE_DEV_LOGS"in globalThis||(self.__WB_DISABLE_DEV_LOGS=!1);let e=!1;const t={debug:"#7f8c8d",log:"#2ecc71",warn:"#f39c12",error:"#c0392b",groupCollapsed:"#3498db",groupEnd:null},a=function(a,s){if(self.__WB_DISABLE_DEV_LOGS)return;if("groupCollapsed"===a&&/^((?!chrome|android).)*safari/i.test(navigator.userAgent))return void console[a](...s);const r=["background: ".concat(t[a]),"border-radius: 0.5em","color: white","font-weight: bold","padding: 2px 0.5em"],n=e?[]:["%cworkbox",r.join(";")];console[a](...n,...s),"groupCollapsed"===a&&(e=!0),"groupEnd"===a&&(e=!1)},s={},r=Object.keys(t);for(const e of r){const t=e;s[t]=(...e)=>{a(t,e)}}return s})();function l(e,t){const a=t();return e.waitUntil(a),a}try{self["workbox:precaching:7.0.0"]&&_()}catch(e){}function u(e){if(!e)throw new a("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:s}=e;if(!s)throw new a("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(s,location.href);return{cacheKey:e.href,url:e.href}}const r=new URL(s,location.href),n=new URL(s,location.href);return r.searchParams.set("__WB_REVISION__",t),{cacheKey:r.href,url:n.href}}var h,d=class{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:a})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;a?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return a}}},f=class{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const a=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return a?new Request(a,{headers:e.headers}):e},this._precacheController=e}};function p(e){const t=e.length;t>0&&(i.groupCollapsed("During precaching cleanup, "+"".concat(t," cached ")+"request".concat(1===t?" was":"s were"," deleted.")),((e,t)=>{i.groupCollapsed(e);for(const e of t)i.log(e);i.groupEnd()})("Deleted Cache Requests",e),i.groupEnd())}function g(e,t){if(0!==t.length){i.groupCollapsed(e);for(const e of t)i.log(e);i.groupEnd()}}async function m(e,t){let s=null;if(e.url){s=new URL(e.url).origin}if(s!==self.location.origin)throw new a("cross-origin-copy-response",{origin:s});const r=e.clone(),n={headers:new Headers(r.headers),status:r.status,statusText:r.statusText},o=t?t(n):n,c=function(){if(void 0===h){const e=new Response("");if("body"in e)try{new Response(e.body),h=!0}catch(e){h=!1}h=!1}return h}()?r.body:await r.blob();return new Response(c,o)}var b=e=>new URL(String(e),location.href).href.replace(new RegExp("^".concat(location.origin)),"");function w(e,t){const a=new URL(e);for(const e of t)a.searchParams.delete(e);return a.href}var y=class{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}},v=new Set;function x(e){return new Promise((t=>setTimeout(t,e)))}try{self["workbox:strategies:7.0.0"]&&_()}catch(e){}function R(e){return"string"==typeof e?new Request(e):e}var N=class{constructor(e,t){this._cacheKeys={},s.isInstance(t.event,ExtendableEvent,{moduleName:"workbox-strategies",className:"StrategyHandler",funcName:"constructor",paramName:"options.event"}),Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new y,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let s=R(e);if("navigate"===s.mode&&t instanceof FetchEvent&&t.preloadResponse){const e=await t.preloadResponse;if(e)return i.log("Using a preloaded navigation response for "+"'".concat(b(s.url),"'")),e}const r=this.hasCallback("fetchDidFail")?s.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))s=await e({request:s.clone(),event:t})}catch(e){if(e instanceof Error)throw new a("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const n=s.clone();try{let e;e=await fetch(s,"navigate"===s.mode?void 0:this._strategy.fetchOptions),i.debug("Network request for "+"'".concat(b(s.url),"' returned a response with ")+"status '".concat(e.status,"'."));for(const a of this.iterateCallbacks("fetchDidSucceed"))e=await a({event:t,request:n,response:e});return e}catch(e){throw i.log("Network request for "+"'".concat(b(s.url),"' threw an error."),e),r&&await this.runCallbacks("fetchDidFail",{error:e,event:t,originalRequest:r.clone(),request:n.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),a=t.clone();return this.waitUntil(this.cachePut(e,a)),t}async cacheMatch(e){const t=R(e);let a;const{cacheName:s,matchOptions:r}=this._strategy,n=await this.getCacheKey(t,"read"),o=Object.assign(Object.assign({},r),{cacheName:s});a=await caches.match(n,o),a?i.debug("Found a cached response in '".concat(s,"'.")):i.debug("No cached response found in '".concat(s,"'."));for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))a=await e({cacheName:s,matchOptions:r,cachedResponse:a,request:n,event:this.event})||void 0;return a}async cachePut(e,t){const s=R(e);await x(0);const r=await this.getCacheKey(s,"write");{if(r.method&&"GET"!==r.method)throw new a("attempt-to-cache-non-get-request",{url:b(r.url),method:r.method});const e=t.headers.get("Vary");e&&i.debug("The response for ".concat(b(r.url)," ")+"has a 'Vary: ".concat(e,"' header. ")+"Consider setting the {ignoreVary: true} option on your strategy to ensure cache matching and deletion works as expected.")}if(!t)throw i.error("Cannot cache non-existent response for "+"'".concat(b(r.url),"'.")),new a("cache-put-with-no-response",{url:b(r.url)});const n=await this._ensureResponseSafeToCache(t);if(!n)return i.debug("Response '".concat(b(r.url),"' ")+"will not be cached.",n),!1;const{cacheName:o,matchOptions:c}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),h=u?await async function(e,t,a,s){const r=w(t.url,a);if(t.url===r)return e.match(t,s);const n=Object.assign(Object.assign({},s),{ignoreSearch:!0}),o=await e.keys(t,n);for(const t of o)if(r===w(t.url,a))return e.match(t,s)}(l,r.clone(),["__WB_REVISION__"],c):null;i.debug("Updating the '".concat(o,"' cache with a new Response ")+"for ".concat(b(r.url),"."));try{await l.put(r,u?n.clone():n)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){i.log("About to run ".concat(v.size," ")+"callbacks to clean up caches.");for(const e of v)await e(),i.log(e,"is complete.");i.log("Finished running callbacks.")}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:h,newResponse:n.clone(),request:r,event:this.event});return!0}async getCacheKey(e,t){const a="".concat(e.url," | ").concat(t);if(!this._cacheKeys[a]){let s=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))s=R(await e({mode:t,request:s,event:this.event,params:this.params}));this._cacheKeys[a]=s}return this._cacheKeys[a]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const a of this.iterateCallbacks(e))await a(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const a=this._pluginStateMap.get(t),s=s=>{const r=Object.assign(Object.assign({},s),{state:a});return t[e](r)};yield s}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,a=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,a=!0,!t)break;return a||(t&&200!==t.status&&(t=void 0),t&&200!==t.status&&(0===t.status?i.warn("The response for '".concat(this.request.url,"' ")+"is an opaque response. The caching strategy that you're using will not cache opaque responses by default."):i.debug("The response for '".concat(this.request.url,"' ")+"returned a status code of '".concat(e.status,"' and won't ")+"be cached as a result."))),t}},C=class{constructor(e={}){this.cacheName=c(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,a="string"==typeof e.request?new Request(e.request):e.request,s="params"in e?e.params:void 0,r=new N(this,{event:t,request:a,params:s}),n=this._getResponse(r,a,t);return[n,this._awaitComplete(n,r,a,t)]}async _getResponse(e,t,s){let r;await e.runCallbacks("handlerWillStart",{event:s,request:t});try{if(r=await this._handle(t,e),!r||"error"===r.type)throw new a("no-response",{url:t.url})}catch(a){if(a instanceof Error)for(const n of e.iterateCallbacks("handlerDidError"))if(r=await n({error:a,event:s,request:t}),r)break;if(!r)throw a;i.log("While responding to '".concat(b(t.url),"', ")+"an ".concat(a instanceof Error?a.toString():""," error occurred. Using a fallback response provided by ")+"a handlerDidError plugin.")}for(const a of e.iterateCallbacks("handlerWillRespond"))r=await a({event:s,request:t,response:r});return r}async _awaitComplete(e,t,a,s){let r,n;try{r=await e}catch(e){}try{await t.runCallbacks("handlerDidRespond",{event:s,request:a,response:r}),await t.doneWaiting()}catch(e){e instanceof Error&&(n=e)}if(await t.runCallbacks("handlerDidComplete",{event:s,request:a,response:r,error:n}),t.destroy(),n)throw n}},k=class e extends C{constructor(t={}){t.cacheName=o(t.cacheName),super(t),this._fallbackToNetwork=!1!==t.fallbackToNetwork,this.plugins.push(e.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const a=await t.cacheMatch(e);return a||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let s;const r=t.params||{};if(!this._fallbackToNetwork)throw new a("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{i.warn("The precached response for "+"".concat(b(e.url)," in ").concat(this.cacheName," was not ")+"found. Falling back to the network.");const a=r.integrity,n=e.integrity,o=!n||n===a;if(s=await t.fetch(new Request(e,{integrity:"no-cors"!==e.mode?n||a:void 0})),a&&o&&"no-cors"!==e.mode){this._useDefaultCacheabilityPluginIfNeeded();await t.cachePut(e,s.clone())&&i.log("A response for ".concat(b(e.url)," ")+'was used to "repair" the precache.')}}{const a=r.cacheKey||await t.getCacheKey(e,"read");i.groupCollapsed("Precaching is responding to: "+b(e.url)),i.log("Serving the precached url: ".concat(b(a instanceof Request?a.url:a))),i.groupCollapsed("View request details here."),i.log(e),i.groupEnd(),i.groupCollapsed("View response details here."),i.log(s),i.groupEnd(),i.groupEnd()}return s}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const s=await t.fetch(e);if(!await t.cachePut(e,s.clone()))throw new a("bad-precaching-response",{url:e.url,status:s.status});return s}_useDefaultCacheabilityPluginIfNeeded(){let t=null,a=0;for(const[s,r]of this.plugins.entries())r!==e.copyRedirectedCacheableResponsesPlugin&&(r===e.defaultPrecacheCacheabilityPlugin&&(t=s),r.cacheWillUpdate&&a++);0===a?this.plugins.push(e.defaultPrecacheCacheabilityPlugin):a>1&&null!==t&&this.plugins.splice(t,1)}};k.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},k.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await m(e):e};try{self["workbox:routing:7.0.0"]&&_()}catch(e){}var T,q=["DELETE","GET","HEAD","PATCH","POST","PUT"],E=e=>e&&"object"==typeof e?(s.hasMethod(e,"handle",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),e):(s.isType(e,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),{handle:e}),U=class{constructor(e,t,a="GET"){s.isType(e,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"match"}),a&&s.isOneOf(a,q,{paramName:"method"}),this.handler=E(t),this.match=e,this.method=a}setCatchHandler(e){this.catchHandler=E(e)}},L=class extends U{constructor(e,t,a){s.isInstance(e,RegExp,{moduleName:"workbox-routing",className:"RegExpRoute",funcName:"constructor",paramName:"pattern"});super((({url:t})=>{const a=e.exec(t.href);if(a){if(t.origin===location.origin||0===a.index)return a.slice(1);i.debug("The regular expression '".concat(e.toString(),"' only partially matched ")+"against the cross-origin URL '".concat(t.toString(),"'. RegExpRoute's will only ")+"handle cross-origin requests if they match the entire URL.")}}),t,a)}},P=class{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,a=this.handleRequest({request:t,event:e});a&&e.respondWith(a)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data;i.debug("Caching URLs from the window",t.urlsToCache);const a=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const a=new Request(...t);return this.handleRequest({request:a,event:e})})));e.waitUntil(a),e.ports&&e.ports[0]&&a.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){s.isInstance(e,Request,{moduleName:"workbox-routing",className:"Router",funcName:"handleRequest",paramName:"options.request"});const a=new URL(e.url,location.href);if(!a.protocol.startsWith("http"))return void i.debug("Workbox Router only supports URLs that start with 'http'.");const r=a.origin===location.origin,{params:n,route:o}=this.findMatchingRoute({event:t,request:e,sameOrigin:r,url:a});let c=o&&o.handler;const l=[];c&&(l.push(["Found a route to handle this request:",o]),n&&l.push(["Passing the following params to the route's handler:",n]));const u=e.method;if(!c&&this._defaultHandlerMap.has(u)&&(l.push("Failed to find a matching route. Falling "+"back to the default handler for ".concat(u,".")),c=this._defaultHandlerMap.get(u)),!c)return void i.debug("No route found for: ".concat(b(a)));let h;i.groupCollapsed("Router is responding to: ".concat(b(a))),l.forEach((e=>{Array.isArray(e)?i.log(...e):i.log(e)})),i.groupEnd();try{h=c.handle({url:a,request:e,event:t,params:n})}catch(e){h=Promise.reject(e)}const d=o&&o.catchHandler;return h instanceof Promise&&(this._catchHandler||d)&&(h=h.catch((async s=>{if(d){i.groupCollapsed("Error thrown when responding to: "+" ".concat(b(a),". Falling back to route's Catch Handler.")),i.error("Error thrown by:",o),i.error(s),i.groupEnd();try{return await d.handle({url:a,request:e,event:t,params:n})}catch(e){e instanceof Error&&(s=e)}}if(this._catchHandler)return i.groupCollapsed("Error thrown when responding to: "+" ".concat(b(a),". Falling back to global Catch Handler.")),i.error("Error thrown by:",o),i.error(s),i.groupEnd(),this._catchHandler.handle({url:a,request:e,event:t});throw s}))),h}findMatchingRoute({url:e,sameOrigin:t,request:a,event:s}){const r=this._routes.get(a.method)||[];for(const n of r){let r;const o=n.match({url:e,sameOrigin:t,request:a,event:s});if(o)return o instanceof Promise&&i.warn("While routing ".concat(b(e),", an async ")+"matchCallback function was used. Please convert the following route to use a synchronous matchCallback function:",n),r=o,(Array.isArray(r)&&0===r.length||o.constructor===Object&&0===Object.keys(o).length||"boolean"==typeof o)&&(r=void 0),{route:n,params:r}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,E(e))}setCatchHandler(e){this._catchHandler=E(e)}registerRoute(e){s.isType(e,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),s.hasMethod(e,"match",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),s.isType(e.handler,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),s.hasMethod(e.handler,"handle",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.handler"}),s.isType(e.method,"string",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.method"}),this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new a("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(!(t>-1))throw new a("unregister-route-route-not-registered");this._routes.get(e.method).splice(t,1)}},O=()=>(T||((T=new P).addFetchListener(),T.addCacheListener()),T);function S(e,t,s){let r;if("string"==typeof e){const n=new URL(e,location.href);{if(!e.startsWith("/")&&!e.startsWith("http"))throw new a("invalid-string",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});const t=e.startsWith("http")?n.pathname:e,s="[*:?+]";new RegExp("".concat(s)).exec(t)&&i.debug("The '$capture' parameter contains an Express-style wildcard "+"character (".concat(s,"). Strings are now always interpreted as ")+"exact matches; use a RegExp for partial or wildcard matches.")}r=new U((({url:t})=>(t.pathname===n.pathname&&t.origin!==n.origin&&i.debug("".concat(e," only partially matches the cross-origin URL ")+"".concat(t.toString(),". This route will only handle cross-origin requests ")+"if they match the entire URL."),t.href===n.href)),t,s)}else if(e instanceof RegExp)r=new L(e,t,s);else if("function"==typeof e)r=new U(e,t,s);else{if(!(e instanceof U))throw new a("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});r=e}return O().registerRoute(r),r}var K=(e,t)=>"Using ".concat(e," to respond to '").concat(b(t.url),"'"),W=e=>{e&&(i.groupCollapsed("View the final response here."),i.log(e||"[No response returned]"),i.groupEnd())},A={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};self.__WB_DISABLE_DEV_LOGS=!0;var M,D={handlerWillRespond:({response:e})=>{const t=new Headers(e.headers);return t.set("Cross-Origin-Embedder-Policy","require-corp"),t.set("Cross-Origin-Opener-Policy","same-origin"),Promise.resolve(new Response(e.body,{headers:t,status:e.status,statusText:e.statusText}))}},I=new class extends C{constructor(e={}){super(e),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift(A)}async _handle(e,t){const r=[];s.isInstance(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"handle",paramName:"request"});const n=t.fetchAndCachePut(e).catch((()=>{}));t.waitUntil(n);let o,c=await t.cacheMatch(e);if(c)r.push("Found a cached response in the '".concat(this.cacheName,"'")+" cache. Will update with the network response in the background.");else{r.push("No response found in the '".concat(this.cacheName,"' cache. ")+"Will wait for the network response.");try{c=await n}catch(e){e instanceof Error&&(o=e)}}i.groupCollapsed(K(this.constructor.name,e));for(const e of r)i.log(e);if(W(c),i.groupEnd(),!c)throw new a("no-response",{url:e.url,error:o});return c}}({cacheName:"modules",plugins:[D]});M=I,O().setDefaultHandler(M);var j=new class{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:a=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new k({cacheName:o(e),plugins:[...t,new f({precacheController:this})],fallbackToNetwork:a}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){s.isArray(e,{moduleName:"workbox-precaching",className:"PrecacheController",funcName:"addToCacheList",paramName:"entries"});const t=[];for(const s of e){"string"==typeof s?t.push(s):s&&void 0===s.revision&&t.push(s.url);const{cacheKey:e,url:r}=u(s),n="string"!=typeof s&&s.revision?"reload":"default";if(this._urlsToCacheKeys.has(r)&&this._urlsToCacheKeys.get(r)!==e)throw new a("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(r),secondEntry:e});if("string"!=typeof s&&s.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==s.integrity)throw new a("add-to-cache-list-conflicting-integrities",{url:r});this._cacheKeysToIntegrities.set(e,s.integrity)}if(this._urlsToCacheKeys.set(r,e),this._urlsToCacheModes.set(r,n),t.length>0){const e="Workbox is precaching URLs without revision "+"info: ".concat(t.join(", "),"\nThis is generally NOT safe. ")+"Learn more at https://bit.ly/wb-precache";i.warn(e)}}}install(e){return l(e,(async()=>{const t=new d;this.strategy.plugins.push(t);for(const[t,a]of this._urlsToCacheKeys){const s=this._cacheKeysToIntegrities.get(a),r=this._urlsToCacheModes.get(t),n=new Request(t,{integrity:s,cache:r,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:a},request:n,event:e}))}const{updatedURLs:a,notUpdatedURLs:s}=t;return function(e,t){const a=e.length,s=t.length;if(a||s){let r="Precaching ".concat(a," file").concat(1===a?"":"s",".");s>0&&(r+=" ".concat(s," ")+"file".concat(1===s?" is":"s are"," already cached.")),i.groupCollapsed(r),g("View newly precached URLs.",e),g("View previously precached URLs.",t),i.groupEnd()}}(a,s),{updatedURLs:a,notUpdatedURLs:s}}))}activate(e){return l(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),a=new Set(this._urlsToCacheKeys.values()),s=[];for(const r of t)a.has(r.url)||(await e.delete(r),s.push(r.url));return p(s),{deletedURLs:s}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,a=this.getCacheKeyForURL(t);if(a){return(await self.caches.open(this.strategy.cacheName)).match(a)}}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new a("non-precached-url",{url:e});return a=>(a.request=new Request(e),a.params=Object.assign({cacheKey:t},a.params),this.strategy.handle(a))}}({cacheName:"assets",plugins:[D]});j.addToCacheList([{url:"api/index.html",revision:"0966197f95b8aff60fcf7cfed564a83f"},{url:"gen/index.html",revision:"dc7e6c7fd8dda82af01a2e761768b680"},{url:"index.html",revision:"69affc887b51ce366dcb81b69a753ce4"},{url:"api/api.js",revision:"9a958cef7ba3db7a15bf910c9a2c1144"},{url:"gen/gen.js",revision:"18afd235f8ec0cafc8a977b7960d6b52"},{url:"main.js",revision:"200c38f2f51ea511f44c93b8fe46a663"},{url:"modules/chess.js",revision:"c685e984c53b165714bddb5c55e58054"},{url:"modules/ptt.js",revision:"66602289e47e6c604d4cc3c884bca05d"},{url:"modules/py489.js",revision:"a510f0ebdd6dcbdd236904fa21e7cf70"},{url:"sdk.js",revision:"408f82e023598ea508723ac04812f6a4"},{url:"lib/css/all.min.css",revision:"0a7a46b5377183d4e9d6892f454aaf2b"},{url:"style.css",revision:"7e2e976f929d56a4cc3135c1a716ca05"},{url:"lib/webfonts/fa-regular-400.woff2",revision:"3e71d6386bef559f49bc55bfa2398a6c"},{url:"lib/webfonts/fa-solid-900.woff2",revision:"8253a29a1031f004ed0b9a12c19f19df"},{url:"assets/x1/1echecs26.png",revision:"dbc726b96d91b97b2ad53b3ccb8a9e48"},{url:"assets/x1/1echecs32.png",revision:"d9e72216e59873e0d55579ae5c82a889"},{url:"assets/x1/1echecs38.png",revision:"844f49c70b8100c37c24f4222ca5fc89"},{url:"assets/x1/1echecs44.png",revision:"bf81efdbdabf9b270870f425663c8cb0"},{url:"assets/x1/alpha26.png",revision:"305a3d24372ce80575d4fca38b69a471"},{url:"assets/x1/alpha32.png",revision:"ffea054c8fa673d703d0a29e3a822e56"},{url:"assets/x1/alpha38.png",revision:"64c51f078b8ec59bfa4f272b124d98db"},{url:"assets/x1/alpha44.png",revision:"8c0972bd4b0bef531bf7c7f8ed0d1849"},{url:"assets/x1/goodCompanion26.png",revision:"a840624ce5087697dc4345825f903bd2"},{url:"assets/x1/goodCompanion32.png",revision:"437c4c9b067e6f766bc9fc478deba8a5"},{url:"assets/x1/goodCompanion38.png",revision:"5dbf6ca68583149705bbffb5ebe35715"},{url:"assets/x1/goodCompanion44.png",revision:"25e9ad45edf2c8266ed6f5465769767f"},{url:"assets/x1/kilfiger26.png",revision:"b73296336c463726ed7d013fd15c3b21"},{url:"assets/x1/kilfiger32.png",revision:"8526d7037659113b061ee2fe207bbcf8"},{url:"assets/x1/kilfiger38.png",revision:"85440a3c9a0d3f1776a9488b6ab9db1a"},{url:"assets/x1/kilfiger44.png",revision:"1183967ce8f0ce59dc121ce67e8800da"},{url:"assets/x1/merida26.png",revision:"9c0f351be0692bdab30bc1cbb10656c9"},{url:"assets/x1/merida32.png",revision:"a5468ff522278830ded245b7972d8dd7"},{url:"assets/x1/merida38.png",revision:"a4b31c981e83bce5788b97b8c6f3a0a7"},{url:"assets/x1/merida44.png",revision:"9f20ee53f583731b252446b29aee52b3"},{url:"assets/x1/mpchess26.png",revision:"ffd7b4dbdf00350e170b928500dd2815"},{url:"assets/x1/mpchess32.png",revision:"9eac902f04bbcb51b51701beb4e2566f"},{url:"assets/x1/mpchess38.png",revision:"507c558bf87ecd7e1a2887ba404d10c0"},{url:"assets/x1/mpchess44.png",revision:"36d142e3c3c02e09e415fc25e5d9e222"},{url:"assets/x1/skak26.png",revision:"156fb345312da6c5b9863bf39a5aeadd"},{url:"assets/x1/skak32.png",revision:"0be270a8dbb7edfb0dcfc2c15c2f9d6e"},{url:"assets/x1/skak38.png",revision:"2f86d757996dcd31513b340dea5925b5"},{url:"assets/x1/skak44.png",revision:"a44c2e0b8a4677adab1672a0a55302bb"},{url:"assets/x1/symbol26.png",revision:"7e5cd5d03872dcd810d97bf5486a42d0"},{url:"assets/x1/symbol32.png",revision:"99bbb4b4c4b3c4acc2a5067fadce6bd7"},{url:"assets/x1/symbol38.png",revision:"d7e6dccecdf3375aa45e9a7ca24cb366"},{url:"assets/x1/symbol44.png",revision:"867a1da1287229183429867344baa2df"},{url:"assets/x2/1echecs26.png",revision:"a5fabb7c50aae21a5f397546cdcdb93a"},{url:"assets/x2/1echecs32.png",revision:"288907ac1def6de59512bff2d83d88e4"},{url:"assets/x2/1echecs38.png",revision:"42dd13f0fac5baa3942f3571cd591a8b"},{url:"assets/x2/1echecs44.png",revision:"281408a0bd075bf5bbd6f43ee83f2ea6"},{url:"assets/x2/alpha26.png",revision:"7f2627379329b0b5bf91721d4ffe0095"},{url:"assets/x2/alpha32.png",revision:"ebae3b60ca0ba71775efb1520c524298"},{url:"assets/x2/alpha38.png",revision:"8a9c75ddc2adadfb7d1c3d505b95d726"},{url:"assets/x2/alpha44.png",revision:"4cb36808e4b1417c3386d67c2f46bf49"},{url:"assets/x2/goodCompanion26.png",revision:"eb64eb7fd4a3fb6e3c8b79f6eff145ac"},{url:"assets/x2/goodCompanion32.png",revision:"572508a70a2dd03b1f7e8a086dbd5a65"},{url:"assets/x2/goodCompanion38.png",revision:"aa0df3d0faebf5dd11eeeac4a9a9233f"},{url:"assets/x2/goodCompanion44.png",revision:"9c125a249a94e63219d7c26c2eba8c4b"},{url:"assets/x2/kilfiger26.png",revision:"a175614d69859504d16d1b3e0afff776"},{url:"assets/x2/kilfiger32.png",revision:"c24a1775683e5d7fbf90df9faa61ea32"},{url:"assets/x2/kilfiger38.png",revision:"2fa8e442e403477544ea5d6ab2baf0cc"},{url:"assets/x2/kilfiger44.png",revision:"2cabcc4671c95c6d0ada8c4787f42f2d"},{url:"assets/x2/merida26.png",revision:"76e8cc5f2482cec2721827b09770d64b"},{url:"assets/x2/merida32.png",revision:"3cddde4acdadbdd200e61cb3833c7f46"},{url:"assets/x2/merida38.png",revision:"63074205f53952fc9315e4e97ff8affd"},{url:"assets/x2/merida44.png",revision:"9c497b6e71e80cb1aea21693bf556f80"},{url:"assets/x2/mpchess26.png",revision:"75fd71198dec22ebc35f7198cc5ccb76"},{url:"assets/x2/mpchess32.png",revision:"a97902b2336b674e26aa2853d74120e1"},{url:"assets/x2/mpchess38.png",revision:"7667a80931b8e77f54fa80df01e02842"},{url:"assets/x2/mpchess44.png",revision:"035f6705eaf6d64bc8a67be8af465b0e"},{url:"assets/x2/skak26.png",revision:"89c581224760b0faed30adb5e25318d7"},{url:"assets/x2/skak32.png",revision:"b0dea80d7b352f45e3b3ad3b17e6bc5d"},{url:"assets/x2/skak38.png",revision:"ca6333a93bcab10d67bfeb4547035c5d"},{url:"assets/x2/skak44.png",revision:"95def9316c7d809a82debd98c9a477ae"},{url:"assets/x2/symbol26.png",revision:"de7aa92bcc0737415c84cb4273d679cc"},{url:"assets/x2/symbol32.png",revision:"2c3ff9dcd69fafcd6e094e6f784bdfbb"},{url:"assets/x2/symbol38.png",revision:"a520de5ed63d9700c0563041b5668715"},{url:"assets/x2/symbol44.png",revision:"0f19a3d849ba92e9dfcebd8df7d1c856"},{url:"assets/icon/icon-32.png",revision:"96a0183aa4cf7546e01fd3d57cd2e5a9"},{url:"assets/icon/icon-192.png",revision:"811b7d2bfb4e4adb30ec7442f706bc25"},{url:"modules/py489.wasm",revision:"418e181adc11afe2b20b74dc28fdbdab"}]),S(new class extends U{constructor(e,t){super((({request:a})=>{const s=e.getURLsToCacheKeys();for(const r of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:a="index.html",cleanURLs:s=!0,urlManipulation:r}={}){const n=new URL(e,location.href);n.hash="",yield n.href;const o=function(e,t=[]){for(const a of[...e.searchParams.keys()])t.some((e=>e.test(a)))&&e.searchParams.delete(a);return e}(n,t);if(yield o.href,a&&o.pathname.endsWith("/")){const e=new URL(o.href);e.pathname+=a,yield e.href}if(s){const e=new URL(o.href);e.pathname+=".html",yield e.href}if(r){const e=r({url:n});for(const t of e)yield t.href}}(a.url,t)){const t=s.get(r);if(t){return{cacheKey:t,integrity:e.getIntegrityForCacheKey(t)}}}i.debug("Precaching did not find a match for "+b(a.url))}),e.strategy)}}(j,{ignoreURLParametersMatching:[/.*/],cleanURLs:!1}));var H=new Map,F=0;S((({url:e})=>e.pathname.startsWith("/fen-tool/share")),(async({event:e})=>{const t=await e.request.formData(),a=t.get("fen"),s=t.get("image"),r=[];a&&r.push("fen="+encodeURIComponent(a)),s&&(H.set(++F,s),r.push("image="+F));const n="/fen-tool"+(r.length>0?"?"+r.join("&"):"");return Response.redirect(n,303)}),"POST"),S((({url:e})=>e.pathname.startsWith("/fen-tool/shareImage")),(({url:e})=>{const t=Number(e.searchParams.get("image")),a=H.get(t);return H.delete(t),new Response(a)}));var V=new class extends C{constructor(e={}){super(e),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){let r,n;s.isInstance(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"_handle",paramName:"request"});try{const a=[t.fetch(e)];if(this._networkTimeoutSeconds){const e=x(1e3*this._networkTimeoutSeconds);a.push(e)}if(n=await Promise.race(a),!n)throw new Error("Timed out the network response after "+"".concat(this._networkTimeoutSeconds," seconds."))}catch(e){e instanceof Error&&(r=e)}if(i.groupCollapsed(K(this.constructor.name,e)),n?i.log("Got response from network."):i.log("Unable to get a response from the network."),W(n),i.groupEnd(),!n)throw new a("no-response",{url:e.url,error:r});return n}}({fetchOptions:{cache:"reload"}});S((({url:e})=>"mutsuntsai.github.io"!=e.host&&!e.host.startsWith("localhost")),V),self.addEventListener("install",(e=>{self.skipWaiting(),console.log("service worker installing"),j.install(e)})),self.addEventListener("activate",(e=>{j.activate(e)}))})();