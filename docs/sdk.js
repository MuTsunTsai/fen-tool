const script=document.currentScript,apiURL=new URL("api/",script.src),globalOptions=script.dataset,selector="img[fen]",frame=document.createElement("iframe");function setup(e){const t=new MessageChannel;t.port1.onmessage=t=>{e.src=t.data,e.title=s+"\n\nGenerated by https://mutsuntsai.github.io/fen-tool"};const s=e.getAttribute("fen"),n=Object.assign({},globalOptions,e.dataset);e.width=e.height=8*n.size+2,frame.contentWindow.postMessage({fen:s,options:n},"*",[t.port2])}function check(e){e.matches(selector)?setup(e):e.querySelectorAll(selector).forEach((e=>setup(e)))}async function init(){document.head.appendChild(frame),await new Promise((e=>{const t=s=>{s.source==frame.contentWindow&&(removeEventListener("message",t),e())};addEventListener("message",t),frame.src=apiURL.toString()}));const e=document.documentElement;new MutationObserver((e=>{for(const t of e)if("attributes"==t.type){const e=t.attributeName.toLowerCase(),s=e.startsWith("data");t.target==script&&s&&check(document),"IMG"!=t.target.nodeName||"fen"!=e&&!s||setup(t.target)}else for(const e of t.addedNodes)check(e)})).observe(e,{childList:!0,attributes:!0,subtree:!0}),check(e)}frame.style.display="none",init();