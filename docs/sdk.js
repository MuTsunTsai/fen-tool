(()=>{var e=/\/|\d+|\(!?[kqbnrp]\d?\)|[-~]?(\*\d)?([kqbsnrpcx]|'[^']|''..)|./giu;var t={pattern:void 0,bg:void 0,border:"1",blackWhite:!1,knightOffset:.6,SN:!1,size:44,w:8,h:8,set:"1echecs"},n=/^\d+(,\d+)*$/,s=[26,32,38,44],o=["1echecs","alpha","goodCompanion","merida","skak"];var r=document.currentScript,a=new URL("api/",r.src),i=r.dataset,c="img[fen]",d=document.createElement("iframe");function u(r){const a=new MessageChannel;a.port1.onmessage=e=>{r.src=e.data,r.title=c+"\n\nGenerated by https://mutsuntsai.github.io/fen-tool"};const c=r.getAttribute("fen"),u=function(e){const r=Object.assign({},t);if(e){const t=Number(e.size),a=Math.floor(Number(e.w)),i=Math.floor(Number(e.h));s.includes(t)&&(r.size=t),o.includes(e.set)&&(r.set=e.set),e.border&&e.border.match(n)&&(r.border=e.border),0<e.knightOffset&&e.knightOffset<1&&(r.knightOffset=e.offset),r.blackWhite=Boolean(e.blackWhite),r.pattern=e.pattern,r.bg=e.bg,r.SN=e.SN,a>0&&(r.w=a),i>0&&(r.h=i)}return r}(Object.assign({},i,r.dataset)),f=function(e){const t=e.split(",").map((e=>{const t=Number(e);return isNaN(t)?0:Math.abs(Math.floor(t))})),n=t.reduce(((e,t)=>e+t),0);return{array:t,size:n}}(u.border).size,{w:h,h:b}=function(t){const n=t.match(e)||[],s=[0];let o=0;for(const e of n)"/"==e?s[++o]=0:e.match(/^\d+$/)?s[o]+=Number(e):s[o]++;const r=s.length;if(1==r)return;const a=s[0];for(const e of s)if(e!=a)return;return{w:a,h:r}}(c)||u;r.width=u.size*h+2*f,r.height=u.size*b+2*f,d.contentWindow.postMessage({fen:c,options:u},"*",[a.port2])}function f(e){e.matches(c)?u(e):e.querySelectorAll(c).forEach((e=>u(e)))}d.style.display="none",async function(){document.head.appendChild(d),await new Promise((e=>{const t=n=>{n.source==d.contentWindow&&(removeEventListener("message",t),e())};addEventListener("message",t),d.src=a.toString()}));const e=document.documentElement;new MutationObserver((e=>{for(const t of e)if("attributes"==t.type){const e=t.attributeName.toLowerCase(),n=e.startsWith("data");t.target==r&&n&&f(document),"IMG"!=t.target.nodeName||"fen"!=e&&!n||u(t.target)}else for(const e of t.addedNodes)f(e)})).observe(e,{childList:!0,attributes:!0,subtree:!0}),f(e)}()})();